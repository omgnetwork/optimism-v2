{
  "id": "3c1b93cf6c1d84308e5786bb07fc6bda",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title iL1ChugSplashDeployer\n */\ninterface iL1ChugSplashDeployer {\n  function isUpgrading() external view returns (bool);\n}\n"
      },
      "contracts/chugsplash/L1ChugSplashProxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {iL1ChugSplashDeployer} from './interfaces/iL1ChugSplashDeployer.sol';\n\n/**\n * @title L1ChugSplashProxy\n * @dev Basic ChugSplash proxy contract for L1. Very close to being a normal proxy but has added\n * functions `setCode` and `setStorage` for changing the code or storage of the contract. Nifty!\n *\n * Note for future developers: do NOT make anything in this contract 'public' unless you know what\n * you're doing. Anything public can potentially have a function signature that conflicts with a\n * signature attached to the implementation contract. Public functions SHOULD always have the\n * 'proxyCallIfNotOwner' modifier unless there's some *really* good reason not to have that\n * modifier. And there almost certainly is not a good reason to not have that modifier. Beware!\n */\ncontract L1ChugSplashProxy {\n  /*************\n   * Constants *\n   *************/\n\n  // \"Magic\" prefix. When prepended to some arbitrary bytecode and used to create a contract, the\n  // appended bytecode will be deployed as given.\n  bytes13 internal constant DEPLOY_CODE_PREFIX = 0x600D380380600D6000396000f3;\n\n  // bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)\n  bytes32 internal constant IMPLEMENTATION_KEY =\n    0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n  // bytes32(uint256(keccak256('eip1967.proxy.admin')) - 1)\n  bytes32 internal constant OWNER_KEY =\n    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n  /***************\n   * Constructor *\n   ***************/\n\n  /**\n   * @param _owner Address of the initial contract owner.\n   */\n  constructor(address _owner) {\n    _setOwner(_owner);\n  }\n\n  /**********************\n   * Function Modifiers *\n   **********************/\n\n  /**\n   * Blocks a function from being called when the parent signals that the system should be paused\n   * via an isUpgrading function.\n   */\n  modifier onlyWhenNotPaused() {\n    address owner = _getOwner();\n\n    // We do a low-level call because there's no guarantee that the owner actually *is* an\n    // L1ChugSplashDeployer contract and Solidity will throw errors if we do a normal call and\n    // it turns out that it isn't the right type of contract.\n    (bool success, bytes memory returndata) = owner.staticcall(\n      abi.encodeWithSelector(iL1ChugSplashDeployer.isUpgrading.selector)\n    );\n\n    // If the call was unsuccessful then we assume that there's no \"isUpgrading\" method and we\n    // can just continue as normal. We also expect that the return value is exactly 32 bytes\n    // long. If this isn't the case then we can safely ignore the result.\n    if (success && returndata.length == 32) {\n      // Although the expected value is a *boolean*, it's safer to decode as a uint256 in the\n      // case that the isUpgrading function returned something other than 0 or 1. But we only\n      // really care about the case where this value is 0 (= false).\n      uint256 ret = abi.decode(returndata, (uint256));\n      require(\n        ret == 0,\n        'L1ChugSplashProxy: system is currently being upgraded'\n      );\n    }\n\n    _;\n  }\n\n  /**\n   * Makes a proxy call instead of triggering the given function when the caller is either the\n   * owner or the zero address. Caller can only ever be the zero address if this function is\n   * being called off-chain via eth_call, which is totally fine and can be convenient for\n   * client-side tooling. Avoids situations where the proxy and implementation share a sighash\n   * and the proxy function ends up being called instead of the implementation one.\n   *\n   * Note: msg.sender == address(0) can ONLY be triggered off-chain via eth_call. If there's a\n   * way for someone to send a transaction with msg.sender == address(0) in any real context then\n   * we have much bigger problems. Primary reason to include this additional allowed sender is\n   * because the owner address can be changed dynamically and we do not want clients to have to\n   * keep track of the current owner in order to make an eth_call that doesn't trigger the\n   * proxied contract.\n   */\n  modifier proxyCallIfNotOwner() {\n    if (msg.sender == _getOwner() || msg.sender == address(0)) {\n      _;\n    } else {\n      // This WILL halt the call frame on completion.\n      _doProxyCall();\n    }\n  }\n\n  /*********************\n   * Fallback Function *\n   *********************/\n\n  fallback() external payable {\n    // Proxy call by default.\n    _doProxyCall();\n  }\n\n  /********************\n   * Public Functions *\n   ********************/\n\n  /**\n   * Sets the code that should be running behind this proxy. Note that this scheme is a bit\n   * different from the standard proxy scheme where one would typically deploy the code\n   * separately and then set the implementation address. We're doing it this way because it gives\n   * us a lot more freedom on the client side. Can only be triggered by the contract owner.\n   * @param _code New contract code to run inside this contract.\n   */\n  function setCode(bytes memory _code) public proxyCallIfNotOwner {\n    // Get the code hash of the current implementation.\n    address implementation = _getImplementation();\n\n    // If the code hash matches the new implementation then we return early.\n    if (keccak256(_code) == _getAccountCodeHash(implementation)) {\n      return;\n    }\n\n    // Create the deploycode by appending the magic prefix.\n    bytes memory deploycode = abi.encodePacked(DEPLOY_CODE_PREFIX, _code);\n\n    // Deploy the code and set the new implementation address.\n    address newImplementation;\n    assembly {\n      newImplementation := create(0x0, add(deploycode, 0x20), mload(deploycode))\n    }\n\n    // Check that the code was actually deployed correctly. I'm not sure if you can ever\n    // actually fail this check. Should only happen if the contract creation from above runs\n    // out of gas but this parent execution thread does NOT run out of gas. Seems like we\n    // should be doing this check anyway though.\n    require(\n      _getAccountCodeHash(newImplementation) == keccak256(_code),\n      'L1ChugSplashProxy: code was not correctly deployed.'\n    );\n\n    _setImplementation(newImplementation);\n  }\n\n  /**\n   * Modifies some storage slot within the proxy contract. Gives us a lot of power to perform\n   * upgrades in a more transparent way. Only callable by the owner.\n   * @param _key Storage key to modify.\n   * @param _value New value for the storage key.\n   */\n  function setStorage(bytes32 _key, bytes32 _value) public proxyCallIfNotOwner {\n    assembly {\n      sstore(_key, _value)\n    }\n  }\n\n  /**\n   * Changes the owner of the proxy contract. Only callable by the owner.\n   * @param _owner New owner of the proxy contract.\n   */\n  function setOwner(address _owner) public proxyCallIfNotOwner {\n    _setOwner(_owner);\n  }\n\n  /**\n   * Queries the owner of the proxy contract. Can only be called by the owner OR by making an\n   * eth_call and setting the \"from\" address to address(0).\n   * @return Owner address.\n   */\n  function getOwner() public proxyCallIfNotOwner returns (address) {\n    return _getOwner();\n  }\n\n  /**\n   * Queries the implementation address. Can only be called by the owner OR by making an\n   * eth_call and setting the \"from\" address to address(0).\n   * @return Implementation address.\n   */\n  function getImplementation() public proxyCallIfNotOwner returns (address) {\n    return _getImplementation();\n  }\n\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  /**\n   * Sets the implementation address.\n   * @param _implementation New implementation address.\n   */\n  function _setImplementation(address _implementation) internal {\n    assembly {\n      sstore(IMPLEMENTATION_KEY, _implementation)\n    }\n  }\n\n  /**\n   * Queries the implementation address.\n   * @return Implementation address.\n   */\n  function _getImplementation() internal view returns (address) {\n    address implementation;\n    assembly {\n      implementation := sload(IMPLEMENTATION_KEY)\n    }\n    return implementation;\n  }\n\n  /**\n   * Changes the owner of the proxy contract.\n   * @param _owner New owner of the proxy contract.\n   */\n  function _setOwner(address _owner) internal {\n    assembly {\n      sstore(OWNER_KEY, _owner)\n    }\n  }\n\n  /**\n   * Queries the owner of the proxy contract.\n   * @return Owner address.\n   */\n  function _getOwner() internal view returns (address) {\n    address owner;\n    assembly {\n      owner := sload(OWNER_KEY)\n    }\n    return owner;\n  }\n\n  /**\n   * Gets the code hash for a given account.\n   * @param _account Address of the account to get a code hash for.\n   * @return Code hash for the account.\n   */\n  function _getAccountCodeHash(address _account)\n    internal\n    view\n    returns (bytes32)\n  {\n    bytes32 codeHash;\n    assembly {\n      codeHash := extcodehash(_account)\n    }\n    return codeHash;\n  }\n\n  /**\n   * Performs the proxy call via a delegatecall.\n   */\n  function _doProxyCall() internal onlyWhenNotPaused {\n    address implementation = _getImplementation();\n\n    require(\n      implementation != address(0),\n      'L1ChugSplashProxy: implementation is not set yet'\n    );\n\n    assembly {\n      // Copy calldata into memory at 0x0....calldatasize.\n      calldatacopy(0x0, 0x0, calldatasize())\n\n      // Perform the delegatecall, make sure to pass all available gas.\n      let success := delegatecall(\n        gas(),\n        implementation,\n        0x0,\n        calldatasize(),\n        0x0,\n        0x0\n      )\n\n      // Copy returndata into memory at 0x0....returndatasize. Note that this *will*\n      // overwrite the calldata that we just copied into memory but that doesn't really\n      // matter because we'll be returning in a second anyway.\n      returndatacopy(0x0, 0x0, returndatasize())\n\n      // Success == 0 means a revert. We'll revert too and pass the data up.\n      if iszero(success) {\n        revert(0x0, returndatasize())\n      }\n\n      // Otherwise we'll just return and pass the data up.\n      return(0x0, returndatasize())\n    }\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "useLiteralContent": true
      },
      "outputSelection": {
        "*": {
          "*": [
            "storageLayout",
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "evm.gasEstimates",
            "devdoc",
            "userdoc"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/chugsplash/L1ChugSplashProxy.sol": {
        "L1ChugSplashProxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "inputs": [],
              "name": "getImplementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_code",
                  "type": "bytes"
                }
              ],
              "name": "setCode",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_value",
                  "type": "bytes32"
                }
              ],
              "name": "setStorage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Basic ChugSplash proxy contract for L1. Very close to being a normal proxy but has added functions `setCode` and `setStorage` for changing the code or storage of the contract. Nifty! Note for future developers: do NOT make anything in this contract 'public' unless you know what you're doing. Anything public can potentially have a function signature that conflicts with a signature attached to the implementation contract. Public functions SHOULD always have the 'proxyCallIfNotOwner' modifier unless there's some *really* good reason not to have that modifier. And there almost certainly is not a good reason to not have that modifier. Beware!",
            "kind": "dev",
            "methods": {
              "constructor": {
                "params": {
                  "_owner": "Address of the initial contract owner."
                }
              },
              "getImplementation()": {
                "returns": {
                  "_0": "Implementation address."
                }
              },
              "getOwner()": {
                "returns": {
                  "_0": "Owner address."
                }
              },
              "setCode(bytes)": {
                "params": {
                  "_code": "New contract code to run inside this contract."
                }
              },
              "setOwner(address)": {
                "params": {
                  "_owner": "New owner of the proxy contract."
                }
              },
              "setStorage(bytes32,bytes32)": {
                "params": {
                  "_key": "Storage key to modify.",
                  "_value": "New value for the storage key."
                }
              }
            },
            "title": "L1ChugSplashProxy",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_24": {
                  "entryPoint": null,
                  "id": 24,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_setOwner_233": {
                  "entryPoint": null,
                  "id": 233,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 93,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:306:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:209:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "153:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "105:52:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "166:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "185:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "179:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "179:16:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "170:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "258:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "270:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "260:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "260:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "260:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "217:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "228:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "243:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "248:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "239:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "239:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "252:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "235:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "235:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "224:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "224:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "214:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "214:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "207:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "207:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "204:70:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "283:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "293:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "283:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:2",
                            "type": ""
                          }
                        ],
                        "src": "14:290:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50604051610a34380380610a3483398101604081905261002f9161005d565b610057817fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b5061008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b6109988061009c6000396000f3fe60806040526004361061005a5760003560e01c8063893d20e811610043578063893d20e8146100a45780639b0b0fda146100e2578063aaf10f42146101025761005a565b806313af4035146100645780636c5d4ad014610084575b610062610117565b005b34801561007057600080fd5b5061006261007f366004610792565b6103ba565b34801561009057600080fd5b5061006261009f3660046107fe565b61044b565b3480156100b057600080fd5b506100b9610601565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100ee57600080fd5b506100626100fd3660046108cd565b610698565b34801561010e57600080fd5b506100b9610706565b60006101417fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb7947262000000000000000000000000000000000000000000000000000000001790529051919250600091829173ffffffffffffffffffffffffffffffffffffffff8516916101c3919061092a565b600060405180830381855afa9150503d80600081146101fe576040519150601f19603f3d011682016040523d82523d6000602084013e610203565b606091505b5091509150818015610216575080516020145b156102c8576000818060200190518101906102319190610936565b905080156102c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4c314368756753706c61736850726f78793a2073797374656d2069732063757260448201527f72656e746c79206265696e67207570677261646564000000000000000000000060648201526084015b60405180910390fd5b505b60006102f27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905073ffffffffffffffffffffffffffffffffffffffff8116610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4c314368756753706c61736850726f78793a20696d706c656d656e746174696f60448201527f6e206973206e6f7420736574207965740000000000000000000000000000000060648201526084016102bd565b3660008037600080366000845af43d6000803e806103b4573d6000fd5b503d6000f35b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610413575033155b1561044357610440817fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b50565b610440610117565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104a4575033155b156104435760006104d37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b9050803f8251602084012014156104e8575050565b60405160009061051e907f600d380380600d6000396000f30000000000000000000000000000000000000090859060200161094f565b604051602081830303815290604052905060008151602083016000f084516020860120909150813f146105d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4c314368756753706c61736850726f78793a20636f646520776173206e6f742060448201527f636f72726563746c79206465706c6f7965642e0000000000000000000000000060648201526084016102bd565b6105fb817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50505050565b600061062b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610662575033155b1561068d57507fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b610695610117565b90565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106f1575033155b156106fa579055565b610702610117565b5050565b60006107307fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610767575033155b1561068d57507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6000602082840312156107a457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107c857600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561081057600080fd5b813567ffffffffffffffff8082111561082857600080fd5b818401915084601f83011261083c57600080fd5b81358181111561084e5761084e6107cf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610894576108946107cf565b816040528281528760208487010111156108ad57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080604083850312156108e057600080fd5b50508035926020909101359150565b6000815160005b8181101561091057602081850181015186830152016108f6565b8181111561091f576000828601525b509290920192915050565b60006107c882846108ef565b60006020828403121561094857600080fd5b5051919050565b7fffffffffffffffffffffffffff00000000000000000000000000000000000000831681526000610983600d8301846108ef565b94935050505056fea164736f6c6343000809000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA34 CODESIZE SUB DUP1 PUSH2 0xA34 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x5D JUMP JUMPDEST PUSH2 0x57 DUP2 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x998 DUP1 PUSH2 0x9C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x9B0B0FDA EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x102 JUMPI PUSH2 0x5A JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6C5D4AD0 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH2 0x62 PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB794726200000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x203 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x216 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C314368756753706C61736850726F78793A2073797374656D20697320637572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72656E746C79206265696E672075706772616465640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C314368756753706C61736850726F78793A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74207365742079657400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BD JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH2 0x3B4 JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x413 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x443 JUMPI PUSH2 0x440 DUP2 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x440 PUSH2 0x117 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4A4 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 PUSH2 0x4D3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 EXTCODEHASH DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 EQ ISZERO PUSH2 0x4E8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x51E SWAP1 PUSH32 0x600D380380600D6000396000F300000000000000000000000000000000000000 SWAP1 DUP6 SWAP1 PUSH1 0x20 ADD PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE DUP5 MLOAD PUSH1 0x20 DUP7 ADD KECCAK256 SWAP1 SWAP2 POP DUP2 EXTCODEHASH EQ PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C314368756753706C61736850726F78793A20636F646520776173206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F72726563746C79206465706C6F7965642E00000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BD JUMP JUMPDEST PUSH2 0x5FB DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x662 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x68D JUMPI POP PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x695 PUSH2 0x117 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6F1 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x6FA JUMPI SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x702 PUSH2 0x117 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x767 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x68D JUMPI POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x84E JUMPI PUSH2 0x84E PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x7CF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x910 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x8F6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP3 DUP7 ADD MSTORE JUMPDEST POP SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C8 DUP3 DUP5 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000 DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x983 PUSH1 0xD DUP4 ADD DUP5 PUSH2 0x8EF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP EXP ",
              "sourceMap": "847:9186:0:-:0;;;1652:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1686:17;1696:6;8232:9;8225:25;8158:102;1686:17;1652:56;847:9186;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;847:9186:0;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_104": {
                  "entryPoint": null,
                  "id": 104,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_doProxyCall_284": {
                  "entryPoint": 279,
                  "id": 284,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_getAccountCodeHash_261": {
                  "entryPoint": null,
                  "id": 261,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@_getImplementation_225": {
                  "entryPoint": null,
                  "id": 225,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_getOwner_246": {
                  "entryPoint": null,
                  "id": 246,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_setImplementation_212": {
                  "entryPoint": null,
                  "id": 212,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_setOwner_233": {
                  "entryPoint": null,
                  "id": 233,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@getImplementation_204": {
                  "entryPoint": 1798,
                  "id": 204,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getOwner_192": {
                  "entryPoint": 1537,
                  "id": 192,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@setCode_155": {
                  "entryPoint": 1099,
                  "id": 155,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setOwner_180": {
                  "entryPoint": 954,
                  "id": 180,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setStorage_167": {
                  "entryPoint": 1688,
                  "id": 167,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 1938,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_bytes32": {
                  "entryPoint": 2253,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes_memory_ptr": {
                  "entryPoint": 2046,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 2358,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 2287,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes13_t_bytes_memory_ptr__to_t_bytes13_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 2383,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 2346,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_80f248fa6155e0fc5aa4a5bee70c808dd13273743c17164543dec7832bfab5f9__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9cdd3737da84e4ca50acc97fa74d498681f2a78179d569beaec1407d2000f265__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_cfef8f862eca282d77624e0aee971c29e1a237ec30a5872d15a92a1b61adbede__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 1999,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4298:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:239:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "155:36:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "181:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:23:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "159:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "289:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "279:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "279:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "279:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "213:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "224:5:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "231:42:2",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "220:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "220:54:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "210:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "210:65:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:73:2"
                              },
                              "nodeType": "YulIf",
                              "src": "200:93:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "302:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "312:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:2",
                            "type": ""
                          }
                        ],
                        "src": "14:309:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "360:152:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "377:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "380:77:2",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "370:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "370:88:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "370:88:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "474:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "477:4:2",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "467:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "467:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "467:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "498:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "501:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "491:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "491:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "491:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "328:184:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "596:901:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "642:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "651:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "654:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "644:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "644:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "644:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "617:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "626:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "613:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "613:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "638:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "609:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "609:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "606:52:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "667:37:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "694:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "681:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "681:23:2"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "671:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "713:28:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "723:18:2",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "717:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "768:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "777:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "780:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "770:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "770:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "770:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "756:6:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "764:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "753:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "753:14:2"
                              },
                              "nodeType": "YulIf",
                              "src": "750:34:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "793:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "807:9:2"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "818:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "803:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "803:22:2"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "797:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "873:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "882:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "885:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "875:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "875:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "875:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "852:2:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "856:4:2",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "848:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "848:13:2"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "863:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "844:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "844:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "837:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "837:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "834:55:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "898:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "921:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "908:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "908:16:2"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "902:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "947:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "949:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "949:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "949:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "939:2:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "943:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "936:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "936:10:2"
                              },
                              "nodeType": "YulIf",
                              "src": "933:36:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "978:76:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "988:66:2",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "982:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1063:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1083:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1077:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1077:9:2"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1067:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1095:71:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1117:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_3",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1141:2:2"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1145:4:2",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1137:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1137:13:2"
                                              },
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "1152:2:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "1133:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1133:22:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1157:2:2",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1129:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1129:31:2"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1162:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1125:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1125:40:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1113:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1113:53:2"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1099:10:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1225:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1227:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1227:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1227:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1184:10:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1196:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1181:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1181:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1204:10:2"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1216:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1201:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1201:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1178:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1178:46:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1175:72:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1263:2:2",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1267:10:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1256:22:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1256:22:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1294:6:2"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1302:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1287:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1287:18:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1287:18:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1351:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1360:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1363:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1353:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1353:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1353:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1328:2:2"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1332:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1324:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1324:11:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1337:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1320:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1320:20:2"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1342:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1317:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1317:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1314:53:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1393:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1401:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1389:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1389:15:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1410:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1414:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1406:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1406:11:2"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1419:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1376:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1376:46:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1376:46:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1446:6:2"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1454:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1442:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1442:15:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1459:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1438:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1438:24:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1464:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1431:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1431:35:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1431:35:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1475:16:2",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1485:6:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1475:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "562:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "573:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "585:6:2",
                            "type": ""
                          }
                        ],
                        "src": "517:980:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1603:125:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1613:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1625:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1636:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1621:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1621:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1613:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1655:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1670:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1678:42:2",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1666:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1666:55:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1648:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1648:74:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1648:74:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1572:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1583:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1594:4:2",
                            "type": ""
                          }
                        ],
                        "src": "1502:226:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1820:161:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1866:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1875:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1878:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1868:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1868:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1868:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1841:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1850:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1837:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1837:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1862:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1833:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1833:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1830:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1891:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1914:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1901:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1901:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1891:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1933:42:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1960:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1971:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1956:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1956:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1943:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1943:32:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1933:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1778:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1789:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1801:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1809:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1733:248:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2035:287:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2045:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2065:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2059:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2059:12:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2049:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2080:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2089:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2084:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2151:76:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "2176:3:2"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2181:1:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2172:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2172:11:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2199:5:2"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2206:1:2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2195:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2195:13:2"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2210:4:2",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2191:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2191:24:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2185:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2185:31:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2165:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2165:52:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2165:52:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2110:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2113:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2107:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2107:13:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2121:21:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2123:17:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2132:1:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2135:4:2",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2128:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2128:12:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2123:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2103:3:2",
                                "statements": []
                              },
                              "src": "2099:128:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2253:31:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "2266:3:2"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "2271:6:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2262:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2262:16:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2280:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2255:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2255:27:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2255:27:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2242:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2245:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2239:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2239:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2236:48:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2293:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2304:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2309:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2300:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2300:16:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2293:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2012:5:2",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2019:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2027:3:2",
                            "type": ""
                          }
                        ],
                        "src": "1986:336:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2464:52:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2474:36:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2498:6:2"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2506:3:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "2481:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2481:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2474:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2440:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2445:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2456:3:2",
                            "type": ""
                          }
                        ],
                        "src": "2327:189:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2602:103:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2648:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2657:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2660:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2650:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2650:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2650:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2623:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2632:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2619:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2619:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2644:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2615:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2615:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2612:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2673:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2689:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2683:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2683:16:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2673:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2568:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2579:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2591:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2521:184:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2884:243:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2901:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2912:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2894:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2894:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2894:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2935:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2946:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2931:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2931:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2951:2:2",
                                    "type": "",
                                    "value": "53"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2924:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2924:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2924:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2974:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2985:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2970:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2970:18:2"
                                  },
                                  {
                                    "hexValue": "4c314368756753706c61736850726f78793a2073797374656d20697320637572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2990:34:2",
                                    "type": "",
                                    "value": "L1ChugSplashProxy: system is cur"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2963:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2963:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2963:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3045:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3056:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3041:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3041:18:2"
                                  },
                                  {
                                    "hexValue": "72656e746c79206265696e67207570677261646564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3061:23:2",
                                    "type": "",
                                    "value": "rently being upgraded"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3034:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3034:51:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3034:51:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3094:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3106:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3117:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3102:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3094:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cfef8f862eca282d77624e0aee971c29e1a237ec30a5872d15a92a1b61adbede__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2861:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2875:4:2",
                            "type": ""
                          }
                        ],
                        "src": "2710:417:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3306:238:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3323:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3334:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3316:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3316:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3316:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3357:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3368:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3353:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3353:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3373:2:2",
                                    "type": "",
                                    "value": "48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3346:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3346:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3346:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3396:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3407:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3392:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3392:18:2"
                                  },
                                  {
                                    "hexValue": "4c314368756753706c61736850726f78793a20696d706c656d656e746174696f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3412:34:2",
                                    "type": "",
                                    "value": "L1ChugSplashProxy: implementatio"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3385:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3385:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3385:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3467:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3478:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3463:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3463:18:2"
                                  },
                                  {
                                    "hexValue": "6e206973206e6f742073657420796574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3483:18:2",
                                    "type": "",
                                    "value": "n is not set yet"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3456:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3456:46:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3456:46:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3511:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3523:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3534:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3519:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3519:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3511:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_80f248fa6155e0fc5aa4a5bee70c808dd13273743c17164543dec7832bfab5f9__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3283:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3297:4:2",
                            "type": ""
                          }
                        ],
                        "src": "3132:412:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3714:162:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3731:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3740:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3748:66:2",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffff00000000000000000000000000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3736:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3736:79:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3724:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3724:92:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3724:92:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3825:45:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3849:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3861:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3866:2:2",
                                        "type": "",
                                        "value": "13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3857:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3857:12:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "3832:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3832:38:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3825:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes13_t_bytes_memory_ptr__to_t_bytes13_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3682:3:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3687:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3695:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3706:3:2",
                            "type": ""
                          }
                        ],
                        "src": "3549:327:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4055:241:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4072:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4083:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4065:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4065:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4065:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4106:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4117:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4102:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4102:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4122:2:2",
                                    "type": "",
                                    "value": "51"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4095:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4095:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4095:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4145:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4156:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4141:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4141:18:2"
                                  },
                                  {
                                    "hexValue": "4c314368756753706c61736850726f78793a20636f646520776173206e6f7420",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4161:34:2",
                                    "type": "",
                                    "value": "L1ChugSplashProxy: code was not "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4134:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4134:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4134:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4216:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4227:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4212:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4212:18:2"
                                  },
                                  {
                                    "hexValue": "636f72726563746c79206465706c6f7965642e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4232:21:2",
                                    "type": "",
                                    "value": "correctly deployed."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4205:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4205:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4205:49:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4263:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4275:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4286:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4271:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4271:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4263:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9cdd3737da84e4ca50acc97fa74d498681f2a78179d569beaec1407d2000f265__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4032:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4046:4:2",
                            "type": ""
                          }
                        ],
                        "src": "3881:415:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_bytes(value0, pos)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_cfef8f862eca282d77624e0aee971c29e1a237ec30a5872d15a92a1b61adbede__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"L1ChugSplashProxy: system is cur\")\n        mstore(add(headStart, 96), \"rently being upgraded\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_80f248fa6155e0fc5aa4a5bee70c808dd13273743c17164543dec7832bfab5f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"L1ChugSplashProxy: implementatio\")\n        mstore(add(headStart, 96), \"n is not set yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes13_t_bytes_memory_ptr__to_t_bytes13_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(value0, 0xffffffffffffffffffffffffff00000000000000000000000000000000000000))\n        end := abi_encode_bytes(value1, add(pos, 13))\n    }\n    function abi_encode_tuple_t_stringliteral_9cdd3737da84e4ca50acc97fa74d498681f2a78179d569beaec1407d2000f265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"L1ChugSplashProxy: code was not \")\n        mstore(add(headStart, 96), \"correctly deployed.\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061005a5760003560e01c8063893d20e811610043578063893d20e8146100a45780639b0b0fda146100e2578063aaf10f42146101025761005a565b806313af4035146100645780636c5d4ad014610084575b610062610117565b005b34801561007057600080fd5b5061006261007f366004610792565b6103ba565b34801561009057600080fd5b5061006261009f3660046107fe565b61044b565b3480156100b057600080fd5b506100b9610601565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100ee57600080fd5b506100626100fd3660046108cd565b610698565b34801561010e57600080fd5b506100b9610706565b60006101417fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb7947262000000000000000000000000000000000000000000000000000000001790529051919250600091829173ffffffffffffffffffffffffffffffffffffffff8516916101c3919061092a565b600060405180830381855afa9150503d80600081146101fe576040519150601f19603f3d011682016040523d82523d6000602084013e610203565b606091505b5091509150818015610216575080516020145b156102c8576000818060200190518101906102319190610936565b905080156102c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4c314368756753706c61736850726f78793a2073797374656d2069732063757260448201527f72656e746c79206265696e67207570677261646564000000000000000000000060648201526084015b60405180910390fd5b505b60006102f27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905073ffffffffffffffffffffffffffffffffffffffff8116610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4c314368756753706c61736850726f78793a20696d706c656d656e746174696f60448201527f6e206973206e6f7420736574207965740000000000000000000000000000000060648201526084016102bd565b3660008037600080366000845af43d6000803e806103b4573d6000fd5b503d6000f35b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610413575033155b1561044357610440817fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b50565b610440610117565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104a4575033155b156104435760006104d37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b9050803f8251602084012014156104e8575050565b60405160009061051e907f600d380380600d6000396000f30000000000000000000000000000000000000090859060200161094f565b604051602081830303815290604052905060008151602083016000f084516020860120909150813f146105d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4c314368756753706c61736850726f78793a20636f646520776173206e6f742060448201527f636f72726563746c79206465706c6f7965642e0000000000000000000000000060648201526084016102bd565b6105fb817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50505050565b600061062b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610662575033155b1561068d57507fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b610695610117565b90565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106f1575033155b156106fa579055565b610702610117565b5050565b60006107307fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610767575033155b1561068d57507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6000602082840312156107a457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107c857600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561081057600080fd5b813567ffffffffffffffff8082111561082857600080fd5b818401915084601f83011261083c57600080fd5b81358181111561084e5761084e6107cf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610894576108946107cf565b816040528281528760208487010111156108ad57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080604083850312156108e057600080fd5b50508035926020909101359150565b6000815160005b8181101561091057602081850181015186830152016108f6565b8181111561091f576000828601525b509290920192915050565b60006107c882846108ef565b60006020828403121561094857600080fd5b5051919050565b7fffffffffffffffffffffffffff00000000000000000000000000000000000000831681526000610983600d8301846108ef565b94935050505056fea164736f6c6343000809000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x9B0B0FDA EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x102 JUMPI PUSH2 0x5A JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6C5D4AD0 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH2 0x62 PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB794726200000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x203 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x216 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C314368756753706C61736850726F78793A2073797374656D20697320637572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72656E746C79206265696E672075706772616465640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C314368756753706C61736850726F78793A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74207365742079657400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BD JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH2 0x3B4 JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x413 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x443 JUMPI PUSH2 0x440 DUP2 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x440 PUSH2 0x117 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4A4 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 PUSH2 0x4D3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 EXTCODEHASH DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 EQ ISZERO PUSH2 0x4E8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x51E SWAP1 PUSH32 0x600D380380600D6000396000F300000000000000000000000000000000000000 SWAP1 DUP6 SWAP1 PUSH1 0x20 ADD PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE DUP5 MLOAD PUSH1 0x20 DUP7 ADD KECCAK256 SWAP1 SWAP2 POP DUP2 EXTCODEHASH EQ PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C314368756753706C61736850726F78793A20636F646520776173206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F72726563746C79206465706C6F7965642E00000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BD JUMP JUMPDEST PUSH2 0x5FB DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x662 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x68D JUMPI POP PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x695 PUSH2 0x117 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6F1 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x6FA JUMPI SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x702 PUSH2 0x117 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x767 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x68D JUMPI POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x84E JUMPI PUSH2 0x84E PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x7CF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x910 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x8F6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP3 DUP7 ADD MSTORE JUMPDEST POP SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C8 DUP3 DUP5 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000 DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x983 PUSH1 0xD DUP4 ADD DUP5 PUSH2 0x8EF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP EXP ",
              "sourceMap": "847:9186:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4463:14;:12;:14::i;:::-;847:9186;6734:89;;;;;;;;;;-1:-1:-1;6734:89:0;;;;;:::i;:::-;;:::i;5007:1186::-;;;;;;;;;;-1:-1:-1;5007:1186:0;;;;;:::i;:::-;;:::i;7021:94::-;;;;;;;;;;;;;:::i;:::-;;;1678:42:2;1666:55;;;1648:74;;1636:2;1621:18;7021:94:0;;;;;;;6462:130;;;;;;;;;;-1:-1:-1;6462:130:0;;;;;:::i;:::-;;:::i;7317:112::-;;;;;;;;;;;;;:::i;8934:1097::-;1971:13;1987:11;8460:9;8454:16;;8350:148;1987:11;2319:66;;;;;;;;;;;;;;;;;;2342:42;2319:66;;;2295:96;;1971:27;;-1:-1:-1;2254:12:0;;;;2295:16;;;;:96;;2319:66;2295:96;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:138;;;;2664:7;:34;;;;;2675:10;:17;2696:2;2675:23;2664:34;2660:465;;;2965:11;2990:10;2979:33;;;;;;;;;;;;:::i;:::-;2965:47;-1:-1:-1;3037:8:0;;3020:98;;;;;;;2912:2:2;3020:98:0;;;2894:21:2;2951:2;2931:18;;;2924:30;2990:34;2970:18;;;2963:62;3061:23;3041:18;;;3034:51;3102:19;;3020:98:0;;;;;;;;;2700:425;2660:465;8991:22:::1;9016:20;7988:18:::0;7982:25;;7851:193;9016:20:::1;8991:45:::0;-1:-1:-1;9058:28:0::1;::::0;::::1;9043:107;;;::::0;::::1;::::0;;3334:2:2;9043:107:0::1;::::0;::::1;3316:21:2::0;3373:2;3353:18;;;3346:30;3412:34;3392:18;;;3385:62;3483:18;3463;;;3456:46;3519:19;;9043:107:0::1;3132:412:2::0;9043:107:0::1;9256:14;9251:3;9246::::0;9233:38:::1;9477:3;9464::::0;9440:14:::1;9427:3;9403:14;9388:5;9366:122;9757:16;9752:3;9747::::0;9732:42:::1;9869:7;9859:66;;9900:16;9895:3;9888:29;9859:66;;10004:16;9999:3;9992:29;6734:89:::0;8460:9;8454:16;4154:25;;:10;:25;;;:53;;;-1:-1:-1;4183:10:0;:24;4154:53;4150:164;;;6801:17:::1;6811:6;8232:9:::0;8225:25;8158:102;6801:17:::1;6734:89:::0;:::o;4150:164::-;4293:14;:12;:14::i;5007:1186::-;8460:9;8454:16;4154:25;;:10;:25;;;:53;;;-1:-1:-1;4183:10:0;:24;4154:53;4150:164;;;5133:22:::1;5158:20;7988:18:::0;7982:25;;7851:193;5158:20:::1;5133:45:::0;-1:-1:-1;8817:21:0;;5266:16;;::::1;::::0;::::1;::::0;:55:::1;5262:82;;;5331:7;6734:89:::0;:::o;5262:82::-:1;5436:43;::::0;5410:23:::1;::::0;5436:43:::1;::::0;5453:18;;5473:5;;5436:43:::1;;;:::i;:::-;;;;;;;;;;;;;5410:69;;5549:25;5659:10;5653:17;5646:4;5634:10;5630:21;5625:3;5618:53;6061:16:::0;;::::1;::::0;::::1;::::0;5597:74;;-1:-1:-1;8817:21:0;;6019:58:::1;6004:140;;;::::0;::::1;::::0;;4083:2:2;6004:140:0::1;::::0;::::1;4065:21:2::0;4122:2;4102:18;;;4095:30;4161:34;4141:18;;;4134:62;4232:21;4212:18;;;4205:49;4271:19;;6004:140:0::1;3881:415:2::0;6004:140:0::1;6151:37;6170:17;7711:18:::0;7704:43;7619:138;6151:37:::1;5071:1122;;;6734:89:::0;:::o;7021:94::-;7077:7;4168:11;8460:9;8454:16;;8350:148;4168:11;4154:25;;:10;:25;;;:53;;;-1:-1:-1;4183:10:0;:24;4154:53;4150:164;;;-1:-1:-1;8460:9:0;8454:16;;7021:94::o;4150:164::-;4293:14;:12;:14::i;:::-;7021:94;:::o;6462:130::-;8460:9;8454:16;4154:25;;:10;:25;;;:53;;;-1:-1:-1;4183:10:0;:24;4154:53;4150:164;;;6562:20;;6462:130::o;4150:164::-;4293:14;:12;:14::i;:::-;6462:130;;:::o;7317:112::-;7382:7;4168:11;8460:9;8454:16;;8350:148;4168:11;4154:25;;:10;:25;;;:53;;;-1:-1:-1;4183:10:0;:24;4154:53;4150:164;;;-1:-1:-1;7988:18:0;7982:25;;7021:94::o;14:309:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:2:o;328:184::-;380:77;377:1;370:88;477:4;474:1;467:15;501:4;498:1;491:15;517:980;585:6;638:2;626:9;617:7;613:23;609:32;606:52;;;654:1;651;644:12;606:52;694:9;681:23;723:18;764:2;756:6;753:14;750:34;;;780:1;777;770:12;750:34;818:6;807:9;803:22;793:32;;863:7;856:4;852:2;848:13;844:27;834:55;;885:1;882;875:12;834:55;921:2;908:16;943:2;939;936:10;933:36;;;949:18;;:::i;:::-;1083:2;1077:9;1145:4;1137:13;;988:66;1133:22;;;1157:2;1129:31;1125:40;1113:53;;;1181:18;;;1201:22;;;1178:46;1175:72;;;1227:18;;:::i;:::-;1267:10;1263:2;1256:22;1302:2;1294:6;1287:18;1342:7;1337:2;1332;1328;1324:11;1320:20;1317:33;1314:53;;;1363:1;1360;1353:12;1314:53;1419:2;1414;1410;1406:11;1401:2;1393:6;1389:15;1376:46;1464:1;1442:15;;;1459:2;1438:24;1431:35;;;;-1:-1:-1;1446:6:2;517:980;-1:-1:-1;;;;;517:980:2:o;1733:248::-;1801:6;1809;1862:2;1850:9;1841:7;1837:23;1833:32;1830:52;;;1878:1;1875;1868:12;1830:52;-1:-1:-1;;1901:23:2;;;1971:2;1956:18;;;1943:32;;-1:-1:-1;1733:248:2:o;1986:336::-;2027:3;2065:5;2059:12;2089:1;2099:128;2113:6;2110:1;2107:13;2099:128;;;2210:4;2195:13;;;2191:24;;2185:31;2172:11;;;2165:52;2128:12;2099:128;;;2245:6;2242:1;2239:13;2236:48;;;2280:1;2271:6;2266:3;2262:16;2255:27;2236:48;-1:-1:-1;2300:16:2;;;;;1986:336;-1:-1:-1;;1986:336:2:o;2327:189::-;2456:3;2481:29;2506:3;2498:6;2481:29;:::i;2521:184::-;2591:6;2644:2;2632:9;2623:7;2619:23;2615:32;2612:52;;;2660:1;2657;2650:12;2612:52;-1:-1:-1;2683:16:2;;2521:184;-1:-1:-1;2521:184:2:o;3549:327::-;3748:66;3740:6;3736:79;3731:3;3724:92;3706:3;3832:38;3866:2;3861:3;3857:12;3849:6;3832:38;:::i;:::-;3825:45;3549:327;-1:-1:-1;;;;3549:327:2:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "491200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "": "infinite",
                "getImplementation()": "infinite",
                "getOwner()": "infinite",
                "setCode(bytes)": "infinite",
                "setOwner(address)": "infinite",
                "setStorage(bytes32,bytes32)": "infinite"
              },
              "internal": {
                "_doProxyCall()": "infinite",
                "_getAccountCodeHash(address)": "infinite",
                "_getImplementation()": "infinite",
                "_getOwner()": "infinite",
                "_setImplementation(address)": "infinite",
                "_setOwner(address)": "infinite"
              }
            },
            "methodIdentifiers": {
              "getImplementation()": "aaf10f42",
              "getOwner()": "893d20e8",
              "setCode(bytes)": "6c5d4ad0",
              "setOwner(address)": "13af4035",
              "setStorage(bytes32,bytes32)": "9b0b0fda"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"setCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_value\",\"type\":\"bytes32\"}],\"name\":\"setStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic ChugSplash proxy contract for L1. Very close to being a normal proxy but has added functions `setCode` and `setStorage` for changing the code or storage of the contract. Nifty! Note for future developers: do NOT make anything in this contract 'public' unless you know what you're doing. Anything public can potentially have a function signature that conflicts with a signature attached to the implementation contract. Public functions SHOULD always have the 'proxyCallIfNotOwner' modifier unless there's some *really* good reason not to have that modifier. And there almost certainly is not a good reason to not have that modifier. Beware!\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the initial contract owner.\"}},\"getImplementation()\":{\"returns\":{\"_0\":\"Implementation address.\"}},\"getOwner()\":{\"returns\":{\"_0\":\"Owner address.\"}},\"setCode(bytes)\":{\"params\":{\"_code\":\"New contract code to run inside this contract.\"}},\"setOwner(address)\":{\"params\":{\"_owner\":\"New owner of the proxy contract.\"}},\"setStorage(bytes32,bytes32)\":{\"params\":{\"_key\":\"Storage key to modify.\",\"_value\":\"New value for the storage key.\"}}},\"title\":\"L1ChugSplashProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getImplementation()\":{\"notice\":\"Queries the implementation address. Can only be called by the owner OR by making an eth_call and setting the \\\"from\\\" address to address(0).\"},\"getOwner()\":{\"notice\":\"Queries the owner of the proxy contract. Can only be called by the owner OR by making an eth_call and setting the \\\"from\\\" address to address(0).\"},\"setCode(bytes)\":{\"notice\":\"Sets the code that should be running behind this proxy. Note that this scheme is a bit different from the standard proxy scheme where one would typically deploy the code separately and then set the implementation address. We're doing it this way because it gives us a lot more freedom on the client side. Can only be triggered by the contract owner.\"},\"setOwner(address)\":{\"notice\":\"Changes the owner of the proxy contract. Only callable by the owner.\"},\"setStorage(bytes32,bytes32)\":{\"notice\":\"Modifies some storage slot within the proxy contract. Gives us a lot of power to perform upgrades in a more transparent way. Only callable by the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chugsplash/L1ChugSplashProxy.sol\":\"L1ChugSplashProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/chugsplash/L1ChugSplashProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {iL1ChugSplashDeployer} from './interfaces/iL1ChugSplashDeployer.sol';\\n\\n/**\\n * @title L1ChugSplashProxy\\n * @dev Basic ChugSplash proxy contract for L1. Very close to being a normal proxy but has added\\n * functions `setCode` and `setStorage` for changing the code or storage of the contract. Nifty!\\n *\\n * Note for future developers: do NOT make anything in this contract 'public' unless you know what\\n * you're doing. Anything public can potentially have a function signature that conflicts with a\\n * signature attached to the implementation contract. Public functions SHOULD always have the\\n * 'proxyCallIfNotOwner' modifier unless there's some *really* good reason not to have that\\n * modifier. And there almost certainly is not a good reason to not have that modifier. Beware!\\n */\\ncontract L1ChugSplashProxy {\\n  /*************\\n   * Constants *\\n   *************/\\n\\n  // \\\"Magic\\\" prefix. When prepended to some arbitrary bytecode and used to create a contract, the\\n  // appended bytecode will be deployed as given.\\n  bytes13 internal constant DEPLOY_CODE_PREFIX = 0x600D380380600D6000396000f3;\\n\\n  // bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)\\n  bytes32 internal constant IMPLEMENTATION_KEY =\\n    0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n  // bytes32(uint256(keccak256('eip1967.proxy.admin')) - 1)\\n  bytes32 internal constant OWNER_KEY =\\n    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  /***************\\n   * Constructor *\\n   ***************/\\n\\n  /**\\n   * @param _owner Address of the initial contract owner.\\n   */\\n  constructor(address _owner) {\\n    _setOwner(_owner);\\n  }\\n\\n  /**********************\\n   * Function Modifiers *\\n   **********************/\\n\\n  /**\\n   * Blocks a function from being called when the parent signals that the system should be paused\\n   * via an isUpgrading function.\\n   */\\n  modifier onlyWhenNotPaused() {\\n    address owner = _getOwner();\\n\\n    // We do a low-level call because there's no guarantee that the owner actually *is* an\\n    // L1ChugSplashDeployer contract and Solidity will throw errors if we do a normal call and\\n    // it turns out that it isn't the right type of contract.\\n    (bool success, bytes memory returndata) = owner.staticcall(\\n      abi.encodeWithSelector(iL1ChugSplashDeployer.isUpgrading.selector)\\n    );\\n\\n    // If the call was unsuccessful then we assume that there's no \\\"isUpgrading\\\" method and we\\n    // can just continue as normal. We also expect that the return value is exactly 32 bytes\\n    // long. If this isn't the case then we can safely ignore the result.\\n    if (success && returndata.length == 32) {\\n      // Although the expected value is a *boolean*, it's safer to decode as a uint256 in the\\n      // case that the isUpgrading function returned something other than 0 or 1. But we only\\n      // really care about the case where this value is 0 (= false).\\n      uint256 ret = abi.decode(returndata, (uint256));\\n      require(\\n        ret == 0,\\n        'L1ChugSplashProxy: system is currently being upgraded'\\n      );\\n    }\\n\\n    _;\\n  }\\n\\n  /**\\n   * Makes a proxy call instead of triggering the given function when the caller is either the\\n   * owner or the zero address. Caller can only ever be the zero address if this function is\\n   * being called off-chain via eth_call, which is totally fine and can be convenient for\\n   * client-side tooling. Avoids situations where the proxy and implementation share a sighash\\n   * and the proxy function ends up being called instead of the implementation one.\\n   *\\n   * Note: msg.sender == address(0) can ONLY be triggered off-chain via eth_call. If there's a\\n   * way for someone to send a transaction with msg.sender == address(0) in any real context then\\n   * we have much bigger problems. Primary reason to include this additional allowed sender is\\n   * because the owner address can be changed dynamically and we do not want clients to have to\\n   * keep track of the current owner in order to make an eth_call that doesn't trigger the\\n   * proxied contract.\\n   */\\n  modifier proxyCallIfNotOwner() {\\n    if (msg.sender == _getOwner() || msg.sender == address(0)) {\\n      _;\\n    } else {\\n      // This WILL halt the call frame on completion.\\n      _doProxyCall();\\n    }\\n  }\\n\\n  /*********************\\n   * Fallback Function *\\n   *********************/\\n\\n  fallback() external payable {\\n    // Proxy call by default.\\n    _doProxyCall();\\n  }\\n\\n  /********************\\n   * Public Functions *\\n   ********************/\\n\\n  /**\\n   * Sets the code that should be running behind this proxy. Note that this scheme is a bit\\n   * different from the standard proxy scheme where one would typically deploy the code\\n   * separately and then set the implementation address. We're doing it this way because it gives\\n   * us a lot more freedom on the client side. Can only be triggered by the contract owner.\\n   * @param _code New contract code to run inside this contract.\\n   */\\n  function setCode(bytes memory _code) public proxyCallIfNotOwner {\\n    // Get the code hash of the current implementation.\\n    address implementation = _getImplementation();\\n\\n    // If the code hash matches the new implementation then we return early.\\n    if (keccak256(_code) == _getAccountCodeHash(implementation)) {\\n      return;\\n    }\\n\\n    // Create the deploycode by appending the magic prefix.\\n    bytes memory deploycode = abi.encodePacked(DEPLOY_CODE_PREFIX, _code);\\n\\n    // Deploy the code and set the new implementation address.\\n    address newImplementation;\\n    assembly {\\n      newImplementation := create(0x0, add(deploycode, 0x20), mload(deploycode))\\n    }\\n\\n    // Check that the code was actually deployed correctly. I'm not sure if you can ever\\n    // actually fail this check. Should only happen if the contract creation from above runs\\n    // out of gas but this parent execution thread does NOT run out of gas. Seems like we\\n    // should be doing this check anyway though.\\n    require(\\n      _getAccountCodeHash(newImplementation) == keccak256(_code),\\n      'L1ChugSplashProxy: code was not correctly deployed.'\\n    );\\n\\n    _setImplementation(newImplementation);\\n  }\\n\\n  /**\\n   * Modifies some storage slot within the proxy contract. Gives us a lot of power to perform\\n   * upgrades in a more transparent way. Only callable by the owner.\\n   * @param _key Storage key to modify.\\n   * @param _value New value for the storage key.\\n   */\\n  function setStorage(bytes32 _key, bytes32 _value) public proxyCallIfNotOwner {\\n    assembly {\\n      sstore(_key, _value)\\n    }\\n  }\\n\\n  /**\\n   * Changes the owner of the proxy contract. Only callable by the owner.\\n   * @param _owner New owner of the proxy contract.\\n   */\\n  function setOwner(address _owner) public proxyCallIfNotOwner {\\n    _setOwner(_owner);\\n  }\\n\\n  /**\\n   * Queries the owner of the proxy contract. Can only be called by the owner OR by making an\\n   * eth_call and setting the \\\"from\\\" address to address(0).\\n   * @return Owner address.\\n   */\\n  function getOwner() public proxyCallIfNotOwner returns (address) {\\n    return _getOwner();\\n  }\\n\\n  /**\\n   * Queries the implementation address. Can only be called by the owner OR by making an\\n   * eth_call and setting the \\\"from\\\" address to address(0).\\n   * @return Implementation address.\\n   */\\n  function getImplementation() public proxyCallIfNotOwner returns (address) {\\n    return _getImplementation();\\n  }\\n\\n  /**********************\\n   * Internal Functions *\\n   **********************/\\n\\n  /**\\n   * Sets the implementation address.\\n   * @param _implementation New implementation address.\\n   */\\n  function _setImplementation(address _implementation) internal {\\n    assembly {\\n      sstore(IMPLEMENTATION_KEY, _implementation)\\n    }\\n  }\\n\\n  /**\\n   * Queries the implementation address.\\n   * @return Implementation address.\\n   */\\n  function _getImplementation() internal view returns (address) {\\n    address implementation;\\n    assembly {\\n      implementation := sload(IMPLEMENTATION_KEY)\\n    }\\n    return implementation;\\n  }\\n\\n  /**\\n   * Changes the owner of the proxy contract.\\n   * @param _owner New owner of the proxy contract.\\n   */\\n  function _setOwner(address _owner) internal {\\n    assembly {\\n      sstore(OWNER_KEY, _owner)\\n    }\\n  }\\n\\n  /**\\n   * Queries the owner of the proxy contract.\\n   * @return Owner address.\\n   */\\n  function _getOwner() internal view returns (address) {\\n    address owner;\\n    assembly {\\n      owner := sload(OWNER_KEY)\\n    }\\n    return owner;\\n  }\\n\\n  /**\\n   * Gets the code hash for a given account.\\n   * @param _account Address of the account to get a code hash for.\\n   * @return Code hash for the account.\\n   */\\n  function _getAccountCodeHash(address _account)\\n    internal\\n    view\\n    returns (bytes32)\\n  {\\n    bytes32 codeHash;\\n    assembly {\\n      codeHash := extcodehash(_account)\\n    }\\n    return codeHash;\\n  }\\n\\n  /**\\n   * Performs the proxy call via a delegatecall.\\n   */\\n  function _doProxyCall() internal onlyWhenNotPaused {\\n    address implementation = _getImplementation();\\n\\n    require(\\n      implementation != address(0),\\n      'L1ChugSplashProxy: implementation is not set yet'\\n    );\\n\\n    assembly {\\n      // Copy calldata into memory at 0x0....calldatasize.\\n      calldatacopy(0x0, 0x0, calldatasize())\\n\\n      // Perform the delegatecall, make sure to pass all available gas.\\n      let success := delegatecall(\\n        gas(),\\n        implementation,\\n        0x0,\\n        calldatasize(),\\n        0x0,\\n        0x0\\n      )\\n\\n      // Copy returndata into memory at 0x0....returndatasize. Note that this *will*\\n      // overwrite the calldata that we just copied into memory but that doesn't really\\n      // matter because we'll be returning in a second anyway.\\n      returndatacopy(0x0, 0x0, returndatasize())\\n\\n      // Success == 0 means a revert. We'll revert too and pass the data up.\\n      if iszero(success) {\\n        revert(0x0, returndatasize())\\n      }\\n\\n      // Otherwise we'll just return and pass the data up.\\n      return(0x0, returndatasize())\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xed0e1f8ebffa2dbb91008d146c1e49a19031b0bdebabc823c0b0bd8b3de6cf42\",\"license\":\"MIT\"},\"contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title iL1ChugSplashDeployer\\n */\\ninterface iL1ChugSplashDeployer {\\n  function isUpgrading() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x051db75549bf9e28c2e9bbfdf5742d9e8edb7d210a7c3eeb5a7937c6bc3b775b\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "getImplementation()": {
                "notice": "Queries the implementation address. Can only be called by the owner OR by making an eth_call and setting the \"from\" address to address(0)."
              },
              "getOwner()": {
                "notice": "Queries the owner of the proxy contract. Can only be called by the owner OR by making an eth_call and setting the \"from\" address to address(0)."
              },
              "setCode(bytes)": {
                "notice": "Sets the code that should be running behind this proxy. Note that this scheme is a bit different from the standard proxy scheme where one would typically deploy the code separately and then set the implementation address. We're doing it this way because it gives us a lot more freedom on the client side. Can only be triggered by the contract owner."
              },
              "setOwner(address)": {
                "notice": "Changes the owner of the proxy contract. Only callable by the owner."
              },
              "setStorage(bytes32,bytes32)": {
                "notice": "Modifies some storage slot within the proxy contract. Gives us a lot of power to perform upgrades in a more transparent way. Only callable by the owner."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol": {
        "iL1ChugSplashDeployer": {
          "abi": [
            {
              "inputs": [],
              "name": "isUpgrading",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "title": "iL1ChugSplashDeployer",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "isUpgrading()": "b7947262"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"isUpgrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"iL1ChugSplashDeployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol\":\"iL1ChugSplashDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title iL1ChugSplashDeployer\\n */\\ninterface iL1ChugSplashDeployer {\\n  function isUpgrading() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x051db75549bf9e28c2e9bbfdf5742d9e8edb7d210a7c3eeb5a7937c6bc3b775b\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "3628",
        "formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> contracts/chugsplash/L1ChugSplashProxy.sol:17:1:\n   |\n17 | contract L1ChugSplashProxy {\n   | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n   --> contracts/chugsplash/L1ChugSplashProxy.sol:107:3:\n    |\n107 |   fallback() external payable {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
        "secondarySourceLocations": [
          {
            "end": 4482,
            "file": "contracts/chugsplash/L1ChugSplashProxy.sol",
            "message": "The payable fallback function is defined here.",
            "start": 4399
          }
        ],
        "severity": "warning",
        "sourceLocation": {
          "end": 10033,
          "file": "contracts/chugsplash/L1ChugSplashProxy.sol",
          "start": 847
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/chugsplash/L1ChugSplashProxy.sol": {
        "ast": {
          "absolutePath": "contracts/chugsplash/L1ChugSplashProxy.sol",
          "exportedSymbols": {
            "L1ChugSplashProxy": [
              285
            ],
            "iL1ChugSplashDeployer": [
              294
            ]
          },
          "id": 286,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".9"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "absolutePath": "contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol",
              "file": "./interfaces/iL1ChugSplashDeployer.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 286,
              "sourceUnit": 295,
              "src": "57:77:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "iL1ChugSplashDeployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "65:21:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "L1ChugSplashProxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "136:710:0",
                "text": " @title L1ChugSplashProxy\n @dev Basic ChugSplash proxy contract for L1. Very close to being a normal proxy but has added\n functions `setCode` and `setStorage` for changing the code or storage of the contract. Nifty!\n Note for future developers: do NOT make anything in this contract 'public' unless you know what\n you're doing. Anything public can potentially have a function signature that conflicts with a\n signature attached to the implementation contract. Public functions SHOULD always have the\n 'proxyCallIfNotOwner' modifier unless there's some *really* good reason not to have that\n modifier. And there almost certainly is not a good reason to not have that modifier. Beware!"
              },
              "fullyImplemented": true,
              "id": 285,
              "linearizedBaseContracts": [
                285
              ],
              "name": "L1ChugSplashProxy",
              "nameLocation": "856:17:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 7,
                  "mutability": "constant",
                  "name": "DEPLOY_CODE_PREFIX",
                  "nameLocation": "1105:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1079:75:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes13",
                    "typeString": "bytes13"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "bytes13",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes13",
                      "typeString": "bytes13"
                    }
                  },
                  "value": {
                    "hexValue": "30783630304433383033383036303044363030303339363030306633",
                    "id": 6,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1126:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7609994622878156297907600359667_by_1",
                      "typeString": "int_const 7609994622878156297907600359667"
                    },
                    "value": "0x600D380380600D6000396000f3"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 10,
                  "mutability": "constant",
                  "name": "IMPLEMENTATION_KEY",
                  "nameLocation": "1254:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1228:117:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1279:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                      "typeString": "int_const 2444...(69 digits omitted)...5612"
                    },
                    "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 13,
                  "mutability": "constant",
                  "name": "OWNER_KEY",
                  "nameLocation": "1436:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1410:108:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1452:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                      "typeString": "int_const 8195...(69 digits omitted)...7091"
                    },
                    "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 23,
                    "nodeType": "Block",
                    "src": "1680:28:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 20,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1696:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 19,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "1686:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1686:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22,
                        "nodeType": "ExpressionStatement",
                        "src": "1686:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "1582:67:0",
                    "text": " @param _owner Address of the initial contract owner."
                  },
                  "id": 24,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "1672:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1664:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:16:0"
                  },
                  "returnParameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1680:0:0"
                  },
                  "scope": 285,
                  "src": "1652:56:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "1965:1172:0",
                    "statements": [
                      {
                        "assignments": [
                          28
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 28,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "1979:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 72,
                            "src": "1971:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 27,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1971:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 29,
                            "name": "_getOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "1987:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1987:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1971:27:0"
                      },
                      {
                        "assignments": [
                          33,
                          35
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2259:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 72,
                            "src": "2254:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 32,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2254:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 35,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "2281:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 72,
                            "src": "2268:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 34,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2268:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 40,
                                      "name": "iL1ChugSplashDeployer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 294,
                                      "src": "2342:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_iL1ChugSplashDeployer_$294_$",
                                        "typeString": "type(contract iL1ChugSplashDeployer)"
                                      }
                                    },
                                    "id": 41,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "isUpgrading",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 293,
                                    "src": "2342:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_view$__$returns$_t_bool_$",
                                      "typeString": "function iL1ChugSplashDeployer.isUpgrading() view returns (bool)"
                                    }
                                  },
                                  "id": 42,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2342:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 38,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2319:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2319:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2319:66:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 36,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "2295:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 37,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "2295:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2295:96:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2253:138:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 46,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2664:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 47,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35,
                                "src": "2675:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "2675:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2696:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "2675:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2664:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 70,
                        "nodeType": "IfStatement",
                        "src": "2660:465:0",
                        "trueBody": {
                          "id": 69,
                          "nodeType": "Block",
                          "src": "2700:425:0",
                          "statements": [
                            {
                              "assignments": [
                                53
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 53,
                                  "mutability": "mutable",
                                  "name": "ret",
                                  "nameLocation": "2973:3:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 69,
                                  "src": "2965:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 52,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2965:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 61,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 56,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35,
                                    "src": "2990:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 58,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3003:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 57,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3003:7:0",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 59,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3002:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 54,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2979:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "2979:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 60,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2979:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2965:47:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 65,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 63,
                                      "name": "ret",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53,
                                      "src": "3037:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 64,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3044:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "3037:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4c314368756753706c61736850726f78793a2073797374656d2069732063757272656e746c79206265696e67207570677261646564",
                                    "id": 66,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3055:55:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_cfef8f862eca282d77624e0aee971c29e1a237ec30a5872d15a92a1b61adbede",
                                      "typeString": "literal_string \"L1ChugSplashProxy: system is currently being upgraded\""
                                    },
                                    "value": "L1ChugSplashProxy: system is currently being upgraded"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_cfef8f862eca282d77624e0aee971c29e1a237ec30a5872d15a92a1b61adbede",
                                      "typeString": "literal_string \"L1ChugSplashProxy: system is currently being upgraded\""
                                    }
                                  ],
                                  "id": 62,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3020:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3020:98:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 68,
                              "nodeType": "ExpressionStatement",
                              "src": "3020:98:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 71,
                        "nodeType": "PlaceholderStatement",
                        "src": "3131:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1792:141:0",
                    "text": " Blocks a function from being called when the parent signals that the system should be paused\n via an isUpgrading function."
                  },
                  "id": 73,
                  "name": "onlyWhenNotPaused",
                  "nameLocation": "1945:17:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1962:2:0"
                  },
                  "src": "1936:1201:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 96,
                    "nodeType": "Block",
                    "src": "4144:174:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 76,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4154:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4154:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 78,
                                "name": "_getOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 246,
                                "src": "4168:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4168:11:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4154:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 81,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4183:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4183:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 85,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4205:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 84,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4197:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4197:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4197:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4183:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4154:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 94,
                          "nodeType": "Block",
                          "src": "4231:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 91,
                                  "name": "_doProxyCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "4293:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4293:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 93,
                              "nodeType": "ExpressionStatement",
                              "src": "4293:14:0"
                            }
                          ]
                        },
                        "id": 95,
                        "nodeType": "IfStatement",
                        "src": "4150:164:0",
                        "trueBody": {
                          "id": 90,
                          "nodeType": "Block",
                          "src": "4209:16:0",
                          "statements": [
                            {
                              "id": 89,
                              "nodeType": "PlaceholderStatement",
                              "src": "4217:1:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 74,
                    "nodeType": "StructuredDocumentation",
                    "src": "3141:969:0",
                    "text": " Makes a proxy call instead of triggering the given function when the caller is either the\n owner or the zero address. Caller can only ever be the zero address if this function is\n being called off-chain via eth_call, which is totally fine and can be convenient for\n client-side tooling. Avoids situations where the proxy and implementation share a sighash\n and the proxy function ends up being called instead of the implementation one.\n Note: msg.sender == address(0) can ONLY be triggered off-chain via eth_call. If there's a\n way for someone to send a transaction with msg.sender == address(0) in any real context then\n we have much bigger problems. Primary reason to include this additional allowed sender is\n because the owner address can be changed dynamically and we do not want clients to have to\n keep track of the current owner in order to make an eth_call that doesn't trigger the\n proxied contract."
                  },
                  "id": 97,
                  "name": "proxyCallIfNotOwner",
                  "nameLocation": "4122:19:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4141:2:0"
                  },
                  "src": "4113:205:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "4427:55:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 100,
                            "name": "_doProxyCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "4463:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4463:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "4463:14:0"
                      }
                    ]
                  },
                  "id": 104,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 98,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4407:2:0"
                  },
                  "returnParameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4427:0:0"
                  },
                  "scope": 285,
                  "src": "4399:83:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "5071:1122:0",
                    "statements": [
                      {
                        "assignments": [
                          113
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 113,
                            "mutability": "mutable",
                            "name": "implementation",
                            "nameLocation": "5141:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 154,
                            "src": "5133:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 112,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5133:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 116,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 114,
                            "name": "_getImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "5158:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5158:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5133:45:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 118,
                                "name": "_code",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "5276:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 117,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5266:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5266:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 121,
                                "name": "implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "5306:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 120,
                              "name": "_getAccountCodeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "5286:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) view returns (bytes32)"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5286:35:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5266:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 126,
                        "nodeType": "IfStatement",
                        "src": "5262:82:0",
                        "trueBody": {
                          "id": 125,
                          "nodeType": "Block",
                          "src": "5323:21:0",
                          "statements": [
                            {
                              "functionReturnParameters": 111,
                              "id": 124,
                              "nodeType": "Return",
                              "src": "5331:7:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          128
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 128,
                            "mutability": "mutable",
                            "name": "deploycode",
                            "nameLocation": "5423:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 154,
                            "src": "5410:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 127,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5410:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 134,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 131,
                              "name": "DEPLOY_CODE_PREFIX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "5453:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes13",
                                "typeString": "bytes13"
                              }
                            },
                            {
                              "id": 132,
                              "name": "_code",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "5473:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes13",
                                "typeString": "bytes13"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 129,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5436:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "5436:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5436:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5410:69:0"
                      },
                      {
                        "assignments": [
                          136
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 136,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "5557:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 154,
                            "src": "5549:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 135,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5549:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 137,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5549:25:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "5589:88:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5597:74:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5625:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "deploycode",
                                        "nodeType": "YulIdentifier",
                                        "src": "5634:10:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5646:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5630:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5630:21:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "deploycode",
                                        "nodeType": "YulIdentifier",
                                        "src": "5659:10:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5653:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5653:17:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "5618:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5618:53:0"
                              },
                              "variableNames": [
                                {
                                  "name": "newImplementation",
                                  "nodeType": "YulIdentifier",
                                  "src": "5597:17:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 128,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5634:10:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 128,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5659:10:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 136,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5597:17:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 138,
                        "nodeType": "InlineAssembly",
                        "src": "5580:97:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 141,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 136,
                                    "src": "6039:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 140,
                                  "name": "_getAccountCodeHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "6019:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bytes32_$",
                                    "typeString": "function (address) view returns (bytes32)"
                                  }
                                },
                                "id": 142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6019:38:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 144,
                                    "name": "_code",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "6071:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 143,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "6061:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6061:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "6019:58:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c314368756753706c61736850726f78793a20636f646520776173206e6f7420636f72726563746c79206465706c6f7965642e",
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6085:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9cdd3737da84e4ca50acc97fa74d498681f2a78179d569beaec1407d2000f265",
                                "typeString": "literal_string \"L1ChugSplashProxy: code was not correctly deployed.\""
                              },
                              "value": "L1ChugSplashProxy: code was not correctly deployed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9cdd3737da84e4ca50acc97fa74d498681f2a78179d569beaec1407d2000f265",
                                "typeString": "literal_string \"L1ChugSplashProxy: code was not correctly deployed.\""
                              }
                            ],
                            "id": 139,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6004:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6004:140:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "6004:140:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 151,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "6170:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 150,
                            "name": "_setImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "6151:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6151:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "6151:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "4560:444:0",
                    "text": " Sets the code that should be running behind this proxy. Note that this scheme is a bit\n different from the standard proxy scheme where one would typically deploy the code\n separately and then set the implementation address. We're doing it this way because it gives\n us a lot more freedom on the client side. Can only be triggered by the contract owner.\n @param _code New contract code to run inside this contract."
                  },
                  "functionSelector": "6c5d4ad0",
                  "id": 155,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 110,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 109,
                        "name": "proxyCallIfNotOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 97,
                        "src": "5051:19:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5051:19:0"
                    }
                  ],
                  "name": "setCode",
                  "nameLocation": "5016:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "_code",
                        "nameLocation": "5037:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 155,
                        "src": "5024:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5024:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5023:20:0"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5071:0:0"
                  },
                  "scope": 285,
                  "src": "5007:1186:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 166,
                    "nodeType": "Block",
                    "src": "6539:53:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6554:34:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "_key",
                                    "nodeType": "YulIdentifier",
                                    "src": "6569:4:0"
                                  },
                                  {
                                    "name": "_value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6575:6:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6562:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6562:20:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6562:20:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 158,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6569:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 160,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6575:6:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 165,
                        "nodeType": "InlineAssembly",
                        "src": "6545:43:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 156,
                    "nodeType": "StructuredDocumentation",
                    "src": "6197:262:0",
                    "text": " Modifies some storage slot within the proxy contract. Gives us a lot of power to perform\n upgrades in a more transparent way. Only callable by the owner.\n @param _key Storage key to modify.\n @param _value New value for the storage key."
                  },
                  "functionSelector": "9b0b0fda",
                  "id": 167,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 163,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 162,
                        "name": "proxyCallIfNotOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 97,
                        "src": "6519:19:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6519:19:0"
                    }
                  ],
                  "name": "setStorage",
                  "nameLocation": "6471:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "6490:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "6482:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6482:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "6504:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "6496:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6496:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6481:30:0"
                  },
                  "returnParameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6539:0:0"
                  },
                  "scope": 285,
                  "src": "6462:130:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "6795:28:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 176,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "6811:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 175,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "6801:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6801:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "6801:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 168,
                    "nodeType": "StructuredDocumentation",
                    "src": "6596:135:0",
                    "text": " Changes the owner of the proxy contract. Only callable by the owner.\n @param _owner New owner of the proxy contract."
                  },
                  "functionSelector": "13af4035",
                  "id": 180,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 173,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 172,
                        "name": "proxyCallIfNotOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 97,
                        "src": "6775:19:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6775:19:0"
                    }
                  ],
                  "name": "setOwner",
                  "nameLocation": "6743:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "6760:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "6752:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6752:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6751:16:0"
                  },
                  "returnParameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6795:0:0"
                  },
                  "scope": 285,
                  "src": "6734:89:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "7086:29:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 188,
                            "name": "_getOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "7099:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7099:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 187,
                        "id": 190,
                        "nodeType": "Return",
                        "src": "7092:18:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "6827:191:0",
                    "text": " Queries the owner of the proxy contract. Can only be called by the owner OR by making an\n eth_call and setting the \"from\" address to address(0).\n @return Owner address."
                  },
                  "functionSelector": "893d20e8",
                  "id": 192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 184,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 183,
                        "name": "proxyCallIfNotOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 97,
                        "src": "7048:19:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7048:19:0"
                    }
                  ],
                  "name": "getOwner",
                  "nameLocation": "7030:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7038:2:0"
                  },
                  "returnParameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "7077:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7077:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7076:9:0"
                  },
                  "scope": 285,
                  "src": "7021:94:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "7391:38:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 200,
                            "name": "_getImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "7404:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7404:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 199,
                        "id": 202,
                        "nodeType": "Return",
                        "src": "7397:27:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "7119:195:0",
                    "text": " Queries the implementation address. Can only be called by the owner OR by making an\n eth_call and setting the \"from\" address to address(0).\n @return Implementation address."
                  },
                  "functionSelector": "aaf10f42",
                  "id": 204,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 196,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 195,
                        "name": "proxyCallIfNotOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 97,
                        "src": "7353:19:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7353:19:0"
                    }
                  ],
                  "name": "getImplementation",
                  "nameLocation": "7326:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7343:2:0"
                  },
                  "returnParameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "7382:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7382:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7381:9:0"
                  },
                  "scope": 285,
                  "src": "7317:112:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 211,
                    "nodeType": "Block",
                    "src": "7681:76:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "7696:57:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "IMPLEMENTATION_KEY",
                                    "nodeType": "YulIdentifier",
                                    "src": "7711:18:0"
                                  },
                                  {
                                    "name": "_implementation",
                                    "nodeType": "YulIdentifier",
                                    "src": "7731:15:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7704:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7704:43:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7704:43:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 10,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7711:18:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 207,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7731:15:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 210,
                        "nodeType": "InlineAssembly",
                        "src": "7687:66:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 205,
                    "nodeType": "StructuredDocumentation",
                    "src": "7513:103:0",
                    "text": " Sets the implementation address.\n @param _implementation New implementation address."
                  },
                  "id": 212,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setImplementation",
                  "nameLocation": "7628:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "_implementation",
                        "nameLocation": "7655:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "7647:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7647:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7646:25:0"
                  },
                  "returnParameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7681:0:0"
                  },
                  "scope": 285,
                  "src": "7619:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 224,
                    "nodeType": "Block",
                    "src": "7913:131:0",
                    "statements": [
                      {
                        "assignments": [
                          219
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 219,
                            "mutability": "mutable",
                            "name": "implementation",
                            "nameLocation": "7927:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 224,
                            "src": "7919:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 218,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7919:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 220,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7919:22:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "7956:57:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7964:43:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "IMPLEMENTATION_KEY",
                                    "nodeType": "YulIdentifier",
                                    "src": "7988:18:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7982:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7982:25:0"
                              },
                              "variableNames": [
                                {
                                  "name": "implementation",
                                  "nodeType": "YulIdentifier",
                                  "src": "7964:14:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 10,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7988:18:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 219,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7964:14:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 221,
                        "nodeType": "InlineAssembly",
                        "src": "7947:66:0"
                      },
                      {
                        "expression": {
                          "id": 222,
                          "name": "implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "8025:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 217,
                        "id": 223,
                        "nodeType": "Return",
                        "src": "8018:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "7761:87:0",
                    "text": " Queries the implementation address.\n @return Implementation address."
                  },
                  "id": 225,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getImplementation",
                  "nameLocation": "7860:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7878:2:0"
                  },
                  "returnParameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "7904:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7904:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7903:9:0"
                  },
                  "scope": 285,
                  "src": "7851:193:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "8202:58:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "8217:39:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "OWNER_KEY",
                                    "nodeType": "YulIdentifier",
                                    "src": "8232:9:0"
                                  },
                                  {
                                    "name": "_owner",
                                    "nodeType": "YulIdentifier",
                                    "src": "8243:6:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8225:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8225:25:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8225:25:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 13,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8232:9:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 228,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8243:6:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 231,
                        "nodeType": "InlineAssembly",
                        "src": "8208:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 226,
                    "nodeType": "StructuredDocumentation",
                    "src": "8048:107:0",
                    "text": " Changes the owner of the proxy contract.\n @param _owner New owner of the proxy contract."
                  },
                  "id": 233,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setOwner",
                  "nameLocation": "8167:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "8185:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "8177:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8177:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8176:16:0"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8202:0:0"
                  },
                  "scope": 285,
                  "src": "8158:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "8403:95:0",
                    "statements": [
                      {
                        "assignments": [
                          240
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 240,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "8417:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 245,
                            "src": "8409:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 239,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8409:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 241,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8409:13:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "8437:39:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8445:25:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "OWNER_KEY",
                                    "nodeType": "YulIdentifier",
                                    "src": "8460:9:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8454:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8454:16:0"
                              },
                              "variableNames": [
                                {
                                  "name": "owner",
                                  "nodeType": "YulIdentifier",
                                  "src": "8445:5:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 13,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8460:9:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 240,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8445:5:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 242,
                        "nodeType": "InlineAssembly",
                        "src": "8428:48:0"
                      },
                      {
                        "expression": {
                          "id": 243,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "8488:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 238,
                        "id": 244,
                        "nodeType": "Return",
                        "src": "8481:12:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "8264:83:0",
                    "text": " Queries the owner of the proxy contract.\n @return Owner address."
                  },
                  "id": 246,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getOwner",
                  "nameLocation": "8359:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8368:2:0"
                  },
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 237,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "8394:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8394:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8393:9:0"
                  },
                  "scope": 285,
                  "src": "8350:148:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "8760:109:0",
                    "statements": [
                      {
                        "assignments": [
                          255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 255,
                            "mutability": "mutable",
                            "name": "codeHash",
                            "nameLocation": "8774:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "8766:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 254,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8766:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 256,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8766:16:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "8797:47:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8805:33:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_account",
                                    "nodeType": "YulIdentifier",
                                    "src": "8829:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodehash",
                                  "nodeType": "YulIdentifier",
                                  "src": "8817:11:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8817:21:0"
                              },
                              "variableNames": [
                                {
                                  "name": "codeHash",
                                  "nodeType": "YulIdentifier",
                                  "src": "8805:8:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 249,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8829:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 255,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8805:8:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 257,
                        "nodeType": "InlineAssembly",
                        "src": "8788:56:0"
                      },
                      {
                        "expression": {
                          "id": 258,
                          "name": "codeHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "8856:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 253,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "8849:15:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 247,
                    "nodeType": "StructuredDocumentation",
                    "src": "8502:162:0",
                    "text": " Gets the code hash for a given account.\n @param _account Address of the account to get a code hash for.\n @return Code hash for the account."
                  },
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getAccountCodeHash",
                  "nameLocation": "8676:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "_account",
                        "nameLocation": "8704:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "8696:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8696:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8695:18:0"
                  },
                  "returnParameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "8749:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8749:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8748:9:0"
                  },
                  "scope": 285,
                  "src": "8667:202:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "8985:1046:0",
                    "statements": [
                      {
                        "assignments": [
                          268
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 268,
                            "mutability": "mutable",
                            "name": "implementation",
                            "nameLocation": "8999:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 283,
                            "src": "8991:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 267,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8991:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 271,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 269,
                            "name": "_getImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "9016:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9016:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8991:45:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 273,
                                "name": "implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "9058:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 276,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9084:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9076:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 274,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9076:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9076:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9058:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c314368756753706c61736850726f78793a20696d706c656d656e746174696f6e206973206e6f742073657420796574",
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9094:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80f248fa6155e0fc5aa4a5bee70c808dd13273743c17164543dec7832bfab5f9",
                                "typeString": "literal_string \"L1ChugSplashProxy: implementation is not set yet\""
                              },
                              "value": "L1ChugSplashProxy: implementation is not set yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80f248fa6155e0fc5aa4a5bee70c808dd13273743c17164543dec7832bfab5f9",
                                "typeString": "literal_string \"L1ChugSplashProxy: implementation is not set yet\""
                              }
                            ],
                            "id": 272,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9043:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9043:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 281,
                        "nodeType": "ExpressionStatement",
                        "src": "9043:107:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "9166:861:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9246:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9251:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "9256:12:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9256:14:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "9233:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9233:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9233:38:0"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9351:137:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "9388:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9388:5:0"
                                  },
                                  {
                                    "name": "implementation",
                                    "nodeType": "YulIdentifier",
                                    "src": "9403:14:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9427:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "9440:12:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9440:14:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9464:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9477:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "9366:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9366:122:0"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "9355:7:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9747:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9752:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "9757:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9757:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "9732:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9732:42:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9732:42:0"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9878:47:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9895:3:0",
                                          "type": "",
                                          "value": "0x0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "9900:14:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9900:16:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9888:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9888:29:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9888:29:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nodeType": "YulIdentifier",
                                    "src": "9869:7:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9862:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9862:15:0"
                              },
                              "nodeType": "YulIf",
                              "src": "9859:66:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9999:3:0",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "10004:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10004:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "9992:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9992:29:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9992:29:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 268,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9403:14:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 282,
                        "nodeType": "InlineAssembly",
                        "src": "9157:870:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "8873:58:0",
                    "text": " Performs the proxy call via a delegatecall."
                  },
                  "id": 284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 265,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 264,
                        "name": "onlyWhenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 73,
                        "src": "8967:17:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8967:17:0"
                    }
                  ],
                  "name": "_doProxyCall",
                  "nameLocation": "8943:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8955:2:0"
                  },
                  "returnParameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8985:0:0"
                  },
                  "scope": 285,
                  "src": "8934:1097:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 286,
              "src": "847:9186:0",
              "usedErrors": []
            }
          ],
          "src": "32:10002:0"
        },
        "id": 0
      },
      "contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol": {
        "ast": {
          "absolutePath": "contracts/chugsplash/interfaces/iL1ChugSplashDeployer.sol",
          "exportedSymbols": {
            "iL1ChugSplashDeployer": [
              294
            ]
          },
          "id": 295,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 287,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".9"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "iL1ChugSplashDeployer",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 288,
                "nodeType": "StructuredDocumentation",
                "src": "57:39:1",
                "text": " @title iL1ChugSplashDeployer"
              },
              "fullyImplemented": false,
              "id": 294,
              "linearizedBaseContracts": [
                294
              ],
              "name": "iL1ChugSplashDeployer",
              "nameLocation": "107:21:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "b7947262",
                  "id": 293,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isUpgrading",
                  "nameLocation": "142:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "153:2:1"
                  },
                  "returnParameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 293,
                        "src": "179:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "179:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "178:6:1"
                  },
                  "scope": 294,
                  "src": "133:52:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 295,
              "src": "97:90:1",
              "usedErrors": []
            }
          ],
          "src": "32:156:1"
        },
        "id": 1
      }
    }
  }
}
