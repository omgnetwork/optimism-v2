{
  "id": "fd11199b4ebe106fc591c5442f91b9c6",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >0.7.5;\n\n/**\n * @title Lib_ResolvedDelegateBobaProxy\n */\ncontract Lib_ResolvedDelegateBobaProxy {\n  /*************\n   * Variables *\n   *************/\n\n  mapping(string => address) public addressManager;\n\n  /***************\n   * Constructor *\n   ***************/\n\n  /**\n   * @param _proxyTarget Address of the target contract.\n   */\n  constructor(address _proxyTarget) {\n    addressManager['proxyTarget'] = _proxyTarget;\n    addressManager['proxyOwner'] = msg.sender;\n  }\n\n  /**********************\n   * Function Modifiers *\n   **********************/\n\n  modifier proxyCallIfNotOwner() {\n    if (msg.sender == addressManager['proxyOwner']) {\n      _;\n    } else {\n      // This WILL halt the call frame on completion.\n      _doProxyCall();\n    }\n  }\n\n  /*********************\n   * Fallback Function *\n   *********************/\n\n  fallback() external payable {\n    // Proxy call by default.\n    _doProxyCall();\n  }\n\n  /********************\n   * Public Functions *\n   ********************/\n\n  /**\n   * Update target\n   *\n   * @param _proxyTarget address of proxy target contract\n   */\n  function setTargetContract(address _proxyTarget)\n    external\n    proxyCallIfNotOwner\n  {\n    addressManager['proxyTarget'] = _proxyTarget;\n  }\n\n  /**\n   * Transfer owner\n   */\n  function transferProxyOwnership(address _newOwner)\n    external\n    proxyCallIfNotOwner\n  {\n    require(_newOwner != address(0), 'New owner cannot be the zero address.');\n    addressManager['proxyOwner'] = _newOwner;\n  }\n\n  /**\n   * Performs the proxy call via a delegatecall.\n   */\n  function _doProxyCall() internal {\n    require(\n      addressManager['proxyOwner'] != address(0),\n      'Target address must be initialized.'\n    );\n\n    (bool success, bytes memory returndata) = addressManager['proxyTarget']\n      .delegatecall(msg.data);\n\n    if (success == true) {\n      assembly {\n        return(add(returndata, 0x20), mload(returndata))\n      }\n    } else {\n      assembly {\n        revert(add(returndata, 0x20), mload(returndata))\n      }\n    }\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "useLiteralContent": true
      },
      "outputSelection": {
        "*": {
          "*": [
            "storageLayout",
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "evm.gasEstimates",
            "devdoc",
            "userdoc"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol": {
        "Lib_ResolvedDelegateBobaProxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_proxyTarget",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "name": "addressManager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_proxyTarget",
                  "type": "address"
                }
              ],
              "name": "setTargetContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferProxyOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "constructor": {
                "params": {
                  "_proxyTarget": "Address of the target contract."
                }
              },
              "setTargetContract(address)": {
                "params": {
                  "_proxyTarget": "address of proxy target contract"
                }
              }
            },
            "title": "Lib_ResolvedDelegateBobaProxy",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_26": {
                  "entryPoint": null,
                  "id": 26,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 175,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:839:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:209:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "153:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "105:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "166:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "185:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "179:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "179:16:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "170:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "258:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "270:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "260:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "260:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "260:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "217:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "228:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "243:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "248:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "239:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "239:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "252:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "235:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "235:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "224:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "224:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "214:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "214:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "207:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "207:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "204:70:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "283:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "293:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "283:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:290:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "501:70:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "518:3:1"
                                  },
                                  {
                                    "hexValue": "70726f7879546172676574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "523:13:1",
                                    "type": "",
                                    "value": "proxyTarget"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "511:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "511:26:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "511:26:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "546:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "557:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "562:2:1",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "553:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "546:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "485:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "493:3:1",
                            "type": ""
                          }
                        ],
                        "src": "309:262:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "768:69:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "785:3:1"
                                  },
                                  {
                                    "hexValue": "70726f78794f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "790:12:1",
                                    "type": "",
                                    "value": "proxyOwner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "778:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "778:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "778:25:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "812:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "823:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "828:2:1",
                                    "type": "",
                                    "value": "10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "819:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "819:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "752:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "760:3:1",
                            "type": ""
                          }
                        ],
                        "src": "576:261:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"proxyTarget\")\n        end := add(pos, 11)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"proxyOwner\")\n        end := add(pos, 10)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060405161070e38038061070e83398101604081905261002f916100af565b806000604051610050906a1c1c9bde1e55185c99d95d60aa1b8152600b0190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b031994851617905569383937bc3ca7bbb732b960b11b82526000600a8301525190819003602a0190208054339216919091179055506100df565b6000602082840312156100c157600080fd5b81516001600160a01b03811681146100d857600080fd5b9392505050565b610620806100ee6000396000f3fe6080604052600436106100345760003560e01c806312762d5e1461003e57806347fc822f146100b5578063f1739cae146100d5575b61003c6100f5565b005b34801561004a57600080fd5b5061008c6100593660046104f7565b805160208183018101805160008252928201919093012091525473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c157600080fd5b5061003c6100d03660046105c6565b6102a7565b3480156100e157600080fd5b5061003c6100f03660046105c6565b610397565b6040517f70726f78794f776e65720000000000000000000000000000000000000000000081526000908190600a019081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1614156101dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5461726765742061646472657373206d75737420626520696e697469616c697a60448201527f65642e000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000806000604051610211907f70726f78795461726765740000000000000000000000000000000000000000008152600b0190565b9081526040519081900360200181205473ffffffffffffffffffffffffffffffffffffffff1690610246906000903690610603565b600060405180830381855af49150503d8060008114610281576040519150601f19603f3d011682016040523d82523d6000602084013e610286565b606091505b5090925090506001821515141561029f57805160208201f35b805160208201fd5b6040517f70726f78794f776e6572000000000000000000000000000000000000000000008152600090600a01908152604051908190036020019020543373ffffffffffffffffffffffffffffffffffffffff909116141561038c57806000604051610335907f70726f78795461726765740000000000000000000000000000000000000000008152600b0190565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117905550565b6103946100f5565b50565b6040517f70726f78794f776e6572000000000000000000000000000000000000000000008152600090600a01908152604051908190036020019020543373ffffffffffffffffffffffffffffffffffffffff909116141561038c5773ffffffffffffffffffffffffffffffffffffffff8116610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4e6577206f776e65722063616e6e6f7420626520746865207a65726f2061646460448201527f726573732e00000000000000000000000000000000000000000000000000000060648201526084016101d3565b806000604051610335907f70726f78794f776e6572000000000000000000000000000000000000000000008152600a0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561050957600080fd5b813567ffffffffffffffff8082111561052157600080fd5b818401915084601f83011261053557600080fd5b813581811115610547576105476104c8565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561058d5761058d6104c8565b816040528281528760208487010111156105a657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156105d857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105fc57600080fd5b9392505050565b818382376000910190815291905056fea164736f6c6343000809000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x70E CODESIZE SUB DUP1 PUSH2 0x70E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xAF JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x50 SWAP1 PUSH11 0x1C1C9BDE1E55185C99D95D PUSH1 0xAA SHL DUP2 MSTORE PUSH1 0xB ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 ADD DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH10 0x383937BC3CA7BBB732B9 PUSH1 0xB1 SHL DUP3 MSTORE PUSH1 0x0 PUSH1 0xA DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x2A ADD SWAP1 KECCAK256 DUP1 SLOAD CALLER SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH2 0xDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x620 DUP1 PUSH2 0xEE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12762D5E EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0x47FC822F EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF1739CAE EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH2 0x3C PUSH2 0xF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x59 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xA ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520696E697469616C697A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x211 SWAP1 PUSH32 0x70726F7879546172676574000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xB ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH2 0x246 SWAP1 PUSH1 0x0 SWAP1 CALLDATASIZE SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 ISZERO ISZERO EQ ISZERO PUSH2 0x29F JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x38C JUMPI DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x335 SWAP1 PUSH32 0x70726F7879546172676574000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xB ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x394 PUSH2 0xF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x38C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206F776E65722063616E6E6F7420626520746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726573732E000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x335 SWAP1 PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xA ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x547 JUMPI PUSH2 0x547 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x58D JUMPI PUSH2 0x58D PUSH2 0x4C8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP EXP ",
              "sourceMap": "105:1964:0:-:0;;;382:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;454:12;422:14;:29;;;;-1:-1:-1;;;511:26:1;;562:2;553:12;;309:262;422:29:0;;;;;;;;;;;;;;;:44;;-1:-1:-1;;;;;422:44:0;;;;-1:-1:-1;;;;;;422:44:0;;;;;;-1:-1:-1;;;778:25:1;;-1:-1:-1;828:2:1;819:12;;472:28:0;;;;;;;;;;:41;;503:10;472:41;;;;;;;;-1:-1:-1;105:1964:0;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;576:261::-;105:1964:0;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_49": {
                  "entryPoint": null,
                  "id": 49,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_doProxyCall_126": {
                  "entryPoint": 245,
                  "id": 126,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@addressManager_6": {
                  "entryPoint": null,
                  "id": 6,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setTargetContract_64": {
                  "entryPoint": 679,
                  "id": 64,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transferProxyOwnership_89": {
                  "entryPoint": 919,
                  "id": 89,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 1478,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_string_memory_ptr": {
                  "entryPoint": 1271,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 1539,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_78372e1dcc77bb8a009f55e5c9855ef9fa68c1309b2a5577104c323bb3f5135b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_dadad30c6a021a43166c6ed97689ce072399eda025227dbedca53666936f3055__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 1224,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3350:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "66:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "56:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "56:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "160:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:4:1",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "153:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "153:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "153:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "184:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "187:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "177:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "177:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "177:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "283:901:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "329:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "338:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "341:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "331:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "331:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "331:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "304:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "313:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "300:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "300:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "325:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "296:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "296:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "293:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "354:37:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "381:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "368:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "368:23:1"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "358:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "400:28:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "410:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "404:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "455:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "464:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "467:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "457:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "457:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "457:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "443:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "451:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "440:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "437:34:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "480:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "494:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "505:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "490:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "490:22:1"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "484:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "560:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "569:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "572:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "562:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "562:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "562:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "539:2:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "543:4:1",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "535:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "535:13:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "550:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "531:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "531:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "524:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "524:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "521:55:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "585:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "608:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "595:16:1"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "589:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "634:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "636:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "636:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "636:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "626:2:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "630:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:10:1"
                              },
                              "nodeType": "YulIf",
                              "src": "620:36:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "665:76:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "675:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "669:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "750:23:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "770:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "764:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "764:9:1"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "754:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "782:71:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "804:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_3",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "828:2:1"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "832:4:1",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "824:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "824:13:1"
                                              },
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "839:2:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "820:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "820:22:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "844:2:1",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "816:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "816:31:1"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "849:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "812:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "812:40:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "800:53:1"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "786:10:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "912:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "914:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "914:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "914:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "871:10:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "883:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "891:10:1"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "903:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "888:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "888:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "865:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "865:46:1"
                              },
                              "nodeType": "YulIf",
                              "src": "862:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "950:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "954:10:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "943:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "943:22:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "943:22:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "981:6:1"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "989:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "974:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "974:18:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "974:18:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1038:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1047:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1050:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1040:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1040:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1040:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1015:2:1"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1019:2:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1011:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1011:11:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1024:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1007:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1007:20:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1029:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1004:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1004:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1001:53:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1080:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1088:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1076:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1076:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1097:2:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1101:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1093:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1093:11:1"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1106:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1063:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1063:46:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1063:46:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1133:6:1"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1141:2:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1129:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1129:15:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1146:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1125:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1125:24:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1151:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1118:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1118:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1118:35:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1162:16:1",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1172:6:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1162:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "249:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "260:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "272:6:1",
                            "type": ""
                          }
                        ],
                        "src": "203:981:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1290:125:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1300:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1312:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1323:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1308:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1308:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1300:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1342:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1357:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1365:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1353:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1353:55:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1335:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1335:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1335:74:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1259:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1270:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1281:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1189:226:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1490:239:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1536:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1545:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1548:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1538:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1538:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1538:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1511:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1520:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1507:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1507:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1532:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1503:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1503:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1500:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1561:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1587:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1574:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1574:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1565:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1683:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1692:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1695:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1685:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1685:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1685:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1619:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1630:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1637:42:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1626:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1626:54:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1616:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1616:65:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1609:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1609:73:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1606:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1708:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1718:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1708:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1456:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1467:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1479:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1420:309:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1926:69:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1943:3:1"
                                  },
                                  {
                                    "hexValue": "70726f78794f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1948:12:1",
                                    "type": "",
                                    "value": "proxyOwner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1936:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1936:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1936:25:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1970:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1981:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1986:2:1",
                                    "type": "",
                                    "value": "10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1977:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1977:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1970:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1910:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1918:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1734:261:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2174:225:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2191:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2202:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2184:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2184:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2184:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2225:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2236:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2221:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2221:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2241:2:1",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2214:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2214:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2214:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2264:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2275:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2260:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2260:18:1"
                                  },
                                  {
                                    "hexValue": "5461726765742061646472657373206d75737420626520696e697469616c697a",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2280:34:1",
                                    "type": "",
                                    "value": "Target address must be initializ"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2253:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2253:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2253:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2335:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2346:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2331:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2331:18:1"
                                  },
                                  {
                                    "hexValue": "65642e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2351:5:1",
                                    "type": "",
                                    "value": "ed."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2324:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2324:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2324:33:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2366:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2378:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2389:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2374:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2374:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2366:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dadad30c6a021a43166c6ed97689ce072399eda025227dbedca53666936f3055__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2151:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2165:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2000:399:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2596:70:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2613:3:1"
                                  },
                                  {
                                    "hexValue": "70726f7879546172676574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2618:13:1",
                                    "type": "",
                                    "value": "proxyTarget"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2606:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2606:26:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2606:26:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2641:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2652:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2657:2:1",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2648:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2648:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2641:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2580:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2588:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2404:262:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2818:124:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2841:3:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2846:6:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2854:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2828:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2828:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2828:33:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2870:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2884:3:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2889:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2880:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2880:16:1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2874:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2912:2:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2916:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2905:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2905:13:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2905:13:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2927:9:1",
                              "value": {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2934:2:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2927:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2786:3:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2791:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2799:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2810:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2671:271:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3121:227:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3138:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3149:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3131:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3131:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3131:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3172:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3183:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3168:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3168:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3188:2:1",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3161:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3161:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3161:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3211:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3222:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3207:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3207:18:1"
                                  },
                                  {
                                    "hexValue": "4e6577206f776e65722063616e6e6f7420626520746865207a65726f20616464",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3227:34:1",
                                    "type": "",
                                    "value": "New owner cannot be the zero add"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3200:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3200:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3200:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3282:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3293:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3278:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3278:18:1"
                                  },
                                  {
                                    "hexValue": "726573732e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3298:7:1",
                                    "type": "",
                                    "value": "ress."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3271:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3271:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3271:35:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3315:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3327:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3338:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3323:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3323:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3315:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_78372e1dcc77bb8a009f55e5c9855ef9fa68c1309b2a5577104c323bb3f5135b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3098:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3112:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2947:401:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"proxyOwner\")\n        end := add(pos, 10)\n    }\n    function abi_encode_tuple_t_stringliteral_dadad30c6a021a43166c6ed97689ce072399eda025227dbedca53666936f3055__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Target address must be initializ\")\n        mstore(add(headStart, 96), \"ed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"proxyTarget\")\n        end := add(pos, 11)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_78372e1dcc77bb8a009f55e5c9855ef9fa68c1309b2a5577104c323bb3f5135b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"New owner cannot be the zero add\")\n        mstore(add(headStart, 96), \"ress.\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100345760003560e01c806312762d5e1461003e57806347fc822f146100b5578063f1739cae146100d5575b61003c6100f5565b005b34801561004a57600080fd5b5061008c6100593660046104f7565b805160208183018101805160008252928201919093012091525473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100c157600080fd5b5061003c6100d03660046105c6565b6102a7565b3480156100e157600080fd5b5061003c6100f03660046105c6565b610397565b6040517f70726f78794f776e65720000000000000000000000000000000000000000000081526000908190600a019081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1614156101dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5461726765742061646472657373206d75737420626520696e697469616c697a60448201527f65642e000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000806000604051610211907f70726f78795461726765740000000000000000000000000000000000000000008152600b0190565b9081526040519081900360200181205473ffffffffffffffffffffffffffffffffffffffff1690610246906000903690610603565b600060405180830381855af49150503d8060008114610281576040519150601f19603f3d011682016040523d82523d6000602084013e610286565b606091505b5090925090506001821515141561029f57805160208201f35b805160208201fd5b6040517f70726f78794f776e6572000000000000000000000000000000000000000000008152600090600a01908152604051908190036020019020543373ffffffffffffffffffffffffffffffffffffffff909116141561038c57806000604051610335907f70726f78795461726765740000000000000000000000000000000000000000008152600b0190565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117905550565b6103946100f5565b50565b6040517f70726f78794f776e6572000000000000000000000000000000000000000000008152600090600a01908152604051908190036020019020543373ffffffffffffffffffffffffffffffffffffffff909116141561038c5773ffffffffffffffffffffffffffffffffffffffff8116610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4e6577206f776e65722063616e6e6f7420626520746865207a65726f2061646460448201527f726573732e00000000000000000000000000000000000000000000000000000060648201526084016101d3565b806000604051610335907f70726f78794f776e6572000000000000000000000000000000000000000000008152600a0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561050957600080fd5b813567ffffffffffffffff8082111561052157600080fd5b818401915084601f83011261053557600080fd5b813581811115610547576105476104c8565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561058d5761058d6104c8565b816040528281528760208487010111156105a657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156105d857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105fc57600080fd5b9392505050565b818382376000910190815291905056fea164736f6c6343000809000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12762D5E EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0x47FC822F EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF1739CAE EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH2 0x3C PUSH2 0xF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x59 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xA ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520696E697469616C697A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x211 SWAP1 PUSH32 0x70726F7879546172676574000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xB ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH2 0x246 SWAP1 PUSH1 0x0 SWAP1 CALLDATASIZE SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 ISZERO ISZERO EQ ISZERO PUSH2 0x29F JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x38C JUMPI DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x335 SWAP1 PUSH32 0x70726F7879546172676574000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xB ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x394 PUSH2 0xF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND EQ ISZERO PUSH2 0x38C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206F776E65722063616E6E6F7420626520746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726573732E000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D3 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x335 SWAP1 PUSH32 0x70726F78794F776E657200000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xA ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x547 JUMPI PUSH2 0x547 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x58D JUMPI PUSH2 0x58D PUSH2 0x4C8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP EXP ",
              "sourceMap": "105:1964:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:14;:12;:14::i;:::-;105:1964;201:48;;;;;;;;;;-1:-1:-1;201:48:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:42:1;1353:55;;;1335:74;;1323:2;1308:18;201:48:0;;;;;;;1132:143;;;;;;;;;;-1:-1:-1;1132:143:0;;;;;:::i;:::-;;:::i;1311:220::-;;;;;;;;;;-1:-1:-1;1311:220:0;;;;;:::i;:::-;;:::i;1596:471::-;1650:28;;1948:12:1;1936:25;;1690:1:0;;;;1986:2:1;1977:12;1650:28:0;;;;;;;;;;;;;;;;:42;;1635:108;;;;;;;2202:2:1;1635:108:0;;;2184:21:1;2241:2;2221:18;;;2214:30;2280:34;2260:18;;;2253:62;2351:5;2331:18;;;2324:33;2374:19;;1635:108:0;;;;;;;;;1751:12;1765:23;1792:14;:29;;;;2618:13:1;2606:26;;2657:2;2648:12;;2404:262;1792:29:0;;;;;;;;;;;;;;;;;;:59;;:29;;1842:8;;1792:59;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1750:101:0;;-1:-1:-1;1750:101:0;-1:-1:-1;1873:4:0;1862:15;;;;1858:205;;;1942:10;1936:17;1929:4;1917:10;1913:21;1906:48;1858:205;2037:10;2031:17;2024:4;2012:10;2008:21;2001:48;1132:143;657:28;;1948:12:1;1936:25;;657:14:0;;1986:2:1;1977:12;657:28:0;;;;;;;;;;;;;;643:10;657:28;;;;643:42;639:153;;;1258:12:::1;1226:14;:29;;;;2618:13:1::0;2606:26;;2657:2;2648:12;;2404:262;1226:29:0::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:44;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1132:143;:::o;639:153::-;771:14;:12;:14::i;:::-;1132:143;:::o;1311:220::-;657:28;;1948:12:1;1936:25;;657:14:0;;1986:2:1;1977:12;657:28:0;;;;;;;;;;;;;;643:10;657:28;;;;643:42;639:153;;;1415:23:::1;::::0;::::1;1407:73;;;::::0;::::1;::::0;;3149:2:1;1407:73:0::1;::::0;::::1;3131:21:1::0;3188:2;3168:18;;;3161:30;3227:34;3207:18;;;3200:62;3298:7;3278:18;;;3271:35;3323:19;;1407:73:0::1;2947:401:1::0;1407:73:0::1;1517:9;1486:14;:28;;;;1948:12:1::0;1936:25;;1986:2;1977:12;;1734:261;14:184;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:981;272:6;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;381:9;368:23;410:18;451:2;443:6;440:14;437:34;;;467:1;464;457:12;437:34;505:6;494:9;490:22;480:32;;550:7;543:4;539:2;535:13;531:27;521:55;;572:1;569;562:12;521:55;608:2;595:16;630:2;626;623:10;620:36;;;636:18;;:::i;:::-;770:2;764:9;832:4;824:13;;675:66;820:22;;;844:2;816:31;812:40;800:53;;;868:18;;;888:22;;;865:46;862:72;;;914:18;;:::i;:::-;954:10;950:2;943:22;989:2;981:6;974:18;1029:7;1024:2;1019;1015;1011:11;1007:20;1004:33;1001:53;;;1050:1;1047;1040:12;1001:53;1106:2;1101;1097;1093:11;1088:2;1080:6;1076:15;1063:46;1151:1;1129:15;;;1146:2;1125:24;1118:35;;;;-1:-1:-1;1133:6:1;203:981;-1:-1:-1;;;;;203:981:1:o;1420:309::-;1479:6;1532:2;1520:9;1511:7;1507:23;1503:32;1500:52;;;1548:1;1545;1538:12;1500:52;1587:9;1574:23;1637:42;1630:5;1626:54;1619:5;1616:65;1606:93;;1695:1;1692;1685:12;1606:93;1718:5;1420:309;-1:-1:-1;;;1420:309:1:o;2671:271::-;2854:6;2846;2841:3;2828:33;2810:3;2880:16;;2905:13;;;2880:16;2671:271;-1:-1:-1;2671:271:1:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "313600",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "": "infinite",
                "addressManager(string)": "infinite",
                "setTargetContract(address)": "infinite",
                "transferProxyOwnership(address)": "infinite"
              },
              "internal": {
                "_doProxyCall()": "infinite"
              }
            },
            "methodIdentifiers": {
              "addressManager(string)": "12762d5e",
              "setTargetContract(address)": "47fc822f",
              "transferProxyOwnership(address)": "f1739cae"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyTarget\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"addressManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyTarget\",\"type\":\"address\"}],\"name\":\"setTargetContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_proxyTarget\":\"Address of the target contract.\"}},\"setTargetContract(address)\":{\"params\":{\"_proxyTarget\":\"address of proxy target contract\"}}},\"title\":\"Lib_ResolvedDelegateBobaProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setTargetContract(address)\":{\"notice\":\"Update target\"},\"transferProxyOwnership(address)\":{\"notice\":\"Transfer owner\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol\":\"Lib_ResolvedDelegateBobaProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >0.7.5;\\n\\n/**\\n * @title Lib_ResolvedDelegateBobaProxy\\n */\\ncontract Lib_ResolvedDelegateBobaProxy {\\n  /*************\\n   * Variables *\\n   *************/\\n\\n  mapping(string => address) public addressManager;\\n\\n  /***************\\n   * Constructor *\\n   ***************/\\n\\n  /**\\n   * @param _proxyTarget Address of the target contract.\\n   */\\n  constructor(address _proxyTarget) {\\n    addressManager['proxyTarget'] = _proxyTarget;\\n    addressManager['proxyOwner'] = msg.sender;\\n  }\\n\\n  /**********************\\n   * Function Modifiers *\\n   **********************/\\n\\n  modifier proxyCallIfNotOwner() {\\n    if (msg.sender == addressManager['proxyOwner']) {\\n      _;\\n    } else {\\n      // This WILL halt the call frame on completion.\\n      _doProxyCall();\\n    }\\n  }\\n\\n  /*********************\\n   * Fallback Function *\\n   *********************/\\n\\n  fallback() external payable {\\n    // Proxy call by default.\\n    _doProxyCall();\\n  }\\n\\n  /********************\\n   * Public Functions *\\n   ********************/\\n\\n  /**\\n   * Update target\\n   *\\n   * @param _proxyTarget address of proxy target contract\\n   */\\n  function setTargetContract(address _proxyTarget)\\n    external\\n    proxyCallIfNotOwner\\n  {\\n    addressManager['proxyTarget'] = _proxyTarget;\\n  }\\n\\n  /**\\n   * Transfer owner\\n   */\\n  function transferProxyOwnership(address _newOwner)\\n    external\\n    proxyCallIfNotOwner\\n  {\\n    require(_newOwner != address(0), 'New owner cannot be the zero address.');\\n    addressManager['proxyOwner'] = _newOwner;\\n  }\\n\\n  /**\\n   * Performs the proxy call via a delegatecall.\\n   */\\n  function _doProxyCall() internal {\\n    require(\\n      addressManager['proxyOwner'] != address(0),\\n      'Target address must be initialized.'\\n    );\\n\\n    (bool success, bytes memory returndata) = addressManager['proxyTarget']\\n      .delegatecall(msg.data);\\n\\n    if (success == true) {\\n      assembly {\\n        return(add(returndata, 0x20), mload(returndata))\\n      }\\n    } else {\\n      assembly {\\n        revert(add(returndata, 0x20), mload(returndata))\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x3a9ecdc035c85c8113a84c99d77d4e1ffc3358643b1140ae7da6ccf1918661f1\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 6,
                "contract": "contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol:Lib_ResolvedDelegateBobaProxy",
                "label": "addressManager",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_string_memory_ptr,t_address)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_string_memory_ptr,t_address)": {
                "encoding": "mapping",
                "key": "t_string_memory_ptr",
                "label": "mapping(string => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_string_memory_ptr": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "setTargetContract(address)": {
                "notice": "Update target"
              },
              "transferProxyOwnership(address)": {
                "notice": "Transfer owner"
              }
            },
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "3628",
        "formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol:7:1:\n  |\n7 | contract Lib_ResolvedDelegateBobaProxy {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol:43:3:\n   |\n43 |   fallback() external payable {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
        "secondarySourceLocations": [
          {
            "end": 960,
            "file": "contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol",
            "message": "The payable fallback function is defined here.",
            "start": 877
          }
        ],
        "severity": "warning",
        "sourceLocation": {
          "end": 2069,
          "file": "contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol",
          "start": 105
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol": {
        "ast": {
          "absolutePath": "contracts/libraries/resolver/Lib_ResolvedDelegateBobaProxy.sol",
          "exportedSymbols": {
            "Lib_ResolvedDelegateBobaProxy": [
              127
            ]
          },
          "id": 128,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Lib_ResolvedDelegateBobaProxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "57:47:0",
                "text": " @title Lib_ResolvedDelegateBobaProxy"
              },
              "fullyImplemented": true,
              "id": 127,
              "linearizedBaseContracts": [
                127
              ],
              "name": "Lib_ResolvedDelegateBobaProxy",
              "nameLocation": "114:29:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "12762d5e",
                  "id": 6,
                  "mutability": "mutable",
                  "name": "addressManager",
                  "nameLocation": "235:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "201:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                    "typeString": "mapping(string => address)"
                  },
                  "typeName": {
                    "id": 5,
                    "keyType": {
                      "id": 3,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "209:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "201:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "mapping(string => address)"
                    },
                    "valueType": {
                      "id": 4,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "219:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 25,
                    "nodeType": "Block",
                    "src": "416:102:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 12,
                              "name": "addressManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "422:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 14,
                            "indexExpression": {
                              "hexValue": "70726f7879546172676574",
                              "id": 13,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "437:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d",
                                "typeString": "literal_string \"proxyTarget\""
                              },
                              "value": "proxyTarget"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "422:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 15,
                            "name": "_proxyTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "454:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "422:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 17,
                        "nodeType": "ExpressionStatement",
                        "src": "422:44:0"
                      },
                      {
                        "expression": {
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 18,
                              "name": "addressManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "472:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 20,
                            "indexExpression": {
                              "hexValue": "70726f78794f776e6572",
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "487:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40",
                                "typeString": "literal_string \"proxyOwner\""
                              },
                              "value": "proxyOwner"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "472:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 21,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "503:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 22,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "503:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "472:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24,
                        "nodeType": "ExpressionStatement",
                        "src": "472:41:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 7,
                    "nodeType": "StructuredDocumentation",
                    "src": "313:66:0",
                    "text": " @param _proxyTarget Address of the target contract."
                  },
                  "id": 26,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "_proxyTarget",
                        "nameLocation": "402:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "394:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "394:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "393:22:0"
                  },
                  "returnParameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "416:0:0"
                  },
                  "scope": 127,
                  "src": "382:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "633:163:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 28,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "643:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 29,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "643:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 30,
                              "name": "addressManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "657:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 32,
                            "indexExpression": {
                              "hexValue": "70726f78794f776e6572",
                              "id": 31,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "672:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40",
                                "typeString": "literal_string \"proxyOwner\""
                              },
                              "value": "proxyOwner"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "657:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "643:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 39,
                          "nodeType": "Block",
                          "src": "709:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 36,
                                  "name": "_doProxyCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 126,
                                  "src": "771:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "771:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 38,
                              "nodeType": "ExpressionStatement",
                              "src": "771:14:0"
                            }
                          ]
                        },
                        "id": 40,
                        "nodeType": "IfStatement",
                        "src": "639:153:0",
                        "trueBody": {
                          "id": 35,
                          "nodeType": "Block",
                          "src": "687:16:0",
                          "statements": [
                            {
                              "id": 34,
                              "nodeType": "PlaceholderStatement",
                              "src": "695:1:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 42,
                  "name": "proxyCallIfNotOwner",
                  "nameLocation": "611:19:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 27,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "630:2:0"
                  },
                  "src": "602:194:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 48,
                    "nodeType": "Block",
                    "src": "905:55:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 45,
                            "name": "_doProxyCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "941:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "941:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47,
                        "nodeType": "ExpressionStatement",
                        "src": "941:14:0"
                      }
                    ]
                  },
                  "id": 49,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "885:2:0"
                  },
                  "returnParameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "905:0:0"
                  },
                  "scope": 127,
                  "src": "877:83:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 63,
                    "nodeType": "Block",
                    "src": "1220:55:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 57,
                              "name": "addressManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1226:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 59,
                            "indexExpression": {
                              "hexValue": "70726f7879546172676574",
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1241:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d",
                                "typeString": "literal_string \"proxyTarget\""
                              },
                              "value": "proxyTarget"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1226:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 60,
                            "name": "_proxyTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1258:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1226:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "1226:44:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 50,
                    "nodeType": "StructuredDocumentation",
                    "src": "1038:91:0",
                    "text": " Update target\n @param _proxyTarget address of proxy target contract"
                  },
                  "functionSelector": "47fc822f",
                  "id": 64,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 55,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 54,
                        "name": "proxyCallIfNotOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "1198:19:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1198:19:0"
                    }
                  ],
                  "name": "setTargetContract",
                  "nameLocation": "1141:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "_proxyTarget",
                        "nameLocation": "1167:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "1159:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1159:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1158:22:0"
                  },
                  "returnParameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1220:0:0"
                  },
                  "scope": 127,
                  "src": "1132:143:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "1401:130:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 73,
                                "name": "_newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "1415:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 76,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1436:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 75,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1428:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 74,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1428:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1428:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1415:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6577206f776e65722063616e6e6f7420626520746865207a65726f20616464726573732e",
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1440:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_78372e1dcc77bb8a009f55e5c9855ef9fa68c1309b2a5577104c323bb3f5135b",
                                "typeString": "literal_string \"New owner cannot be the zero address.\""
                              },
                              "value": "New owner cannot be the zero address."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_78372e1dcc77bb8a009f55e5c9855ef9fa68c1309b2a5577104c323bb3f5135b",
                                "typeString": "literal_string \"New owner cannot be the zero address.\""
                              }
                            ],
                            "id": 72,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1407:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1407:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "1407:73:0"
                      },
                      {
                        "expression": {
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 82,
                              "name": "addressManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1486:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 84,
                            "indexExpression": {
                              "hexValue": "70726f78794f776e6572",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1501:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40",
                                "typeString": "literal_string \"proxyOwner\""
                              },
                              "value": "proxyOwner"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1486:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 85,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "1517:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1486:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:40:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 65,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:29:0",
                    "text": " Transfer owner"
                  },
                  "functionSelector": "f1739cae",
                  "id": 89,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 70,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 69,
                        "name": "proxyCallIfNotOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "1379:19:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1379:19:0"
                    }
                  ],
                  "name": "transferProxyOwnership",
                  "nameLocation": "1320:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "1351:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 89,
                        "src": "1343:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1343:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1342:19:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1401:0:0"
                  },
                  "scope": 127,
                  "src": "1311:220:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "1629:438:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 94,
                                  "name": "addressManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6,
                                  "src": "1650:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                    "typeString": "mapping(string memory => address)"
                                  }
                                },
                                "id": 96,
                                "indexExpression": {
                                  "hexValue": "70726f78794f776e6572",
                                  "id": 95,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1665:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_58abd4febf6049537a09f9860e164d3e284e4eff599b5f25597fc253fb0d2b40",
                                    "typeString": "literal_string \"proxyOwner\""
                                  },
                                  "value": "proxyOwner"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1650:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 99,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1690:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 98,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1682:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 97,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1682:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1682:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1650:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5461726765742061646472657373206d75737420626520696e697469616c697a65642e",
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1700:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dadad30c6a021a43166c6ed97689ce072399eda025227dbedca53666936f3055",
                                "typeString": "literal_string \"Target address must be initialized.\""
                              },
                              "value": "Target address must be initialized."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dadad30c6a021a43166c6ed97689ce072399eda025227dbedca53666936f3055",
                                "typeString": "literal_string \"Target address must be initialized.\""
                              }
                            ],
                            "id": 93,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1635:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1635:108:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "1635:108:0"
                      },
                      {
                        "assignments": [
                          106,
                          108
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 106,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1756:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 125,
                            "src": "1751:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 105,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1751:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 108,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "1778:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 125,
                            "src": "1765:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 107,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1765:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 116,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1842:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "1842:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 109,
                                "name": "addressManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "1792:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 111,
                              "indexExpression": {
                                "hexValue": "70726f7879546172676574",
                                "id": 110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1807:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b3ef6058e0dc86397903a64f178f30a3e6f249730928acf4bff8ba89c5a8fd5d",
                                  "typeString": "literal_string \"proxyTarget\""
                                },
                                "value": "proxyTarget"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1792:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "1792:49:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1792:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1750:101:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 117,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "1862:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1873:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1862:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 123,
                          "nodeType": "Block",
                          "src": "1974:89:0",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "1991:66:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "2012:10:0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2024:4:0",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2008:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2008:21:0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "2037:10:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2031:5:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2031:17:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2001:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2001:48:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2001:48:0"
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 108,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2012:10:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 108,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2037:10:0",
                                  "valueSize": 1
                                }
                              ],
                              "id": 122,
                              "nodeType": "InlineAssembly",
                              "src": "1982:75:0"
                            }
                          ]
                        },
                        "id": 124,
                        "nodeType": "IfStatement",
                        "src": "1858:205:0",
                        "trueBody": {
                          "id": 121,
                          "nodeType": "Block",
                          "src": "1879:89:0",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "1896:66:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "1917:10:0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1929:4:0",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1913:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1913:21:0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "1942:10:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1936:5:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1936:17:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "return",
                                        "nodeType": "YulIdentifier",
                                        "src": "1906:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1906:48:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1906:48:0"
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 108,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "1917:10:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 108,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "1942:10:0",
                                  "valueSize": 1
                                }
                              ],
                              "id": 120,
                              "nodeType": "InlineAssembly",
                              "src": "1887:75:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 90,
                    "nodeType": "StructuredDocumentation",
                    "src": "1535:58:0",
                    "text": " Performs the proxy call via a delegatecall."
                  },
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_doProxyCall",
                  "nameLocation": "1605:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1617:2:0"
                  },
                  "returnParameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1629:0:0"
                  },
                  "scope": 127,
                  "src": "1596:471:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 128,
              "src": "105:1964:0",
              "usedErrors": []
            }
          ],
          "src": "32:2038:0"
        },
        "id": 0
      }
    }
  }
}
