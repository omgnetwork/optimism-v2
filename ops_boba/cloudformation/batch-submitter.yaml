AWSTemplateFormatVersion: "2010-09-09"
Description: "Enya Batch Submitter Deployment"

Parameters:
  EnvironmentName:
    Type: String
    Default: dev

  ServiceCount:
    Type: Number
    Default: 1

  ImageTag:
    Type: String
    Default: push2aws


  BatchSubmitterImage:
    Type: String
    Default: batch-submitter

  DockerPrefix:
    Type: String
    Default: omgx

  ECRRegistry:
    Type: String
    Default: 942431445534.dkr.ecr.us-east-1.amazonaws.com

  LogsRetention:
    Type: Number
    Default: 7

  InfrastructureStackName:
    Description: Infrastructure stack to associate this stack with
    Type: String
    Default: infrastructure-coredev

  SecretName:
    Description: AWS Secret Name used for the service
    Type: String

Conditions:
  IsProduction:
    !Equals [!Ref EnvironmentName, "production"]

Resources:
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub ecs-tasks.${AWS::URLSuffix}
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowAccessToSecrets
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetResourcePolicy"
                  - "secretsmanager:GetSecretValue"
                  - "secretsmanager:DescribeSecret"
                  - "secretsmanager:ListSecretVersionIds"
                Resource:
                  - arn:aws:secretsmanager:us-east-1:942431445534:secret:*
  BatchSubmitterLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/omgx/${EnvironmentName}/batch-submitter/${ImageTag}"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: !Sub "${ECRRegistry}/${DockerPrefix}/${BatchSubmitterImage}:${ImageTag}"
          Name: batch_submitter
          Environment:
            - Name: SECRETNAME
              Value: !Ref SecretName
            - Name: URL
              Value: !Sub
                - "https://${EndpointAddress}:8081/addresses.json"
                - EndpointAddress:
                    Fn::ImportValue: !Sub "${InfrastructureStackName}:DomainName"
            - Name: L2_NODE_WEB3_URL
              Value: !Sub
                - "https://${EndpointAddress}"
                - EndpointAddress:
                    Fn::ImportValue: !Sub "${InfrastructureStackName}:DomainName"
            - Name: DEPLOYER_HTTP
              Value: !Sub
                - "https://${EndpointAddress}:8081"
                - EndpointAddress:
                    Fn::ImportValue: !Sub "${InfrastructureStackName}:DomainName"
            - Name: RETRIES
              Value: 3600
            - Name: POLL_INTERVAL
              Value: 15000
          EntryPoint:
            - "/opt/optimism/packages/batch-submitter/batches.sh"
          DockerLabels:
            com.datadoghq.ad.check_names: '["batch_submitter"]'
            com.datadoghq.ad.init_configs: '[{}]'
            com.datadoghq.ad.logs: '[{"source": "batch_submitter", "service": "batch_submitter"}]'
          Essential: true
          Memory: "300"
      NetworkMode: bridge
      TaskRoleArn: !GetAtt TaskRole.Arn
      Family: !Sub "BatchSubmitter-${EnvironmentName}"
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub "${InfrastructureStackName}:EcsCluster"
      DesiredCount: !Ref ServiceCount
      LaunchType: EC2
      SchedulingStrategy: REPLICA
      ServiceName: "batch-submitter"
      TaskDefinition: !Ref TaskDefinition
